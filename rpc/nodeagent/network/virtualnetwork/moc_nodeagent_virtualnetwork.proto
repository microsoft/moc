// Copyright (c) Microsoft Corporation.
// Licensed under the Apache v2.0 license.

syntax = "proto3";
option go_package = "github.com/microsoft/moc/rpc/nodeagent/network";
package moc.nodeagent.network;

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "moc_common_common.proto";
import "moc_common_networkcommon.proto";
import "moc_common_notification.proto";


message VirtualNetworkRequest {
	repeated VirtualNetwork VirtualNetworks = 1;
	Operation OperationType = 2;
}

message VirtualNetworkResponse {
	repeated VirtualNetwork VirtualNetworks = 1;
	google.protobuf.BoolValue Result = 2;
	string  Error = 3;
}

message VirtualNetwork {
	reserved 7;
	string name = 1;
	string id = 2;
	repeated Ipam ipams = 3;
	Dns dns = 4 [(sensitive) = true];
	NetworkType type = 5;
	MacPool macPool = 6;
	Status status = 8;
	Entity entity = 9;
	Tags tags = 10;
}

message MacRange {
	string startMacAddress = 1 [(sensitive) = true];
	string endMacAddress = 2 [(sensitive) = true];
}
message MacPool {
	repeated MacRange ranges = 1;
}

message Subnet {
	string name = 1;
	string id = 2;
	string cidr = 3 [(sensitive) = true];
	repeated Route routes = 4;
	IPAllocationMethod allocation = 5;
	uint32 vlan = 6;
}
message Ipam {
	string type = 1;
	repeated Subnet subnets = 2;
}

service VirtualNetworkAgent {
	rpc Invoke(VirtualNetworkRequest) returns (VirtualNetworkResponse) {}
	rpc CheckNotification(google.protobuf.Empty) returns (NotificationResponse) {}
}

