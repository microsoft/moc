// Copyright (c) Microsoft Corporation.
// Licensed under the Apache v2.0 license.

syntax = "proto3";
option go_package = "github.com/microsoft/moc/rpc/nodeagent/network";
package moc.nodeagent.network;

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "common.proto";
import "notification.proto";
import "networkcommon.proto";

message VirtualNetworkInterfaceRequest {
	repeated VirtualNetworkInterface VirtualNetworkInterfaces = 1;
	Operation OperationType = 2;
}

message VirtualNetworkInterfaceResponse {
	repeated VirtualNetworkInterface VirtualNetworkInterfaces = 1;
	google.protobuf.BoolValue Result = 2;
	string  Error = 3;
}

message IpConfiguration {
	string ipaddress = 1;
	string prefixlength = 2;
	string subnetid = 3;
	bool primary = 4;
	string gateway = 5;
	IPAllocationMethod allocation = 6;
}

message VirtualNetworkInterface {
	string name = 1;
	string id = 2;
	enum NetworkInterfaceType {
		Local = 0;
		Remote = 1;
	}
	NetworkInterfaceType type = 3;
	repeated IpConfiguration ipconfigs = 4;
	string macaddress = 5;
	Dns dnsSettings = 6;
	string virtualMachineName = 7;
	Status status = 8;
	Entity entity = 9;
	uint32 iovWeight = 10;
	Tags tags = 11;
}

service VirtualNetworkInterfaceAgent {
	rpc Invoke(VirtualNetworkInterfaceRequest) returns (VirtualNetworkInterfaceResponse) {}
	rpc CheckNotification(google.protobuf.Empty) returns (NotificationResponse) {}
}
