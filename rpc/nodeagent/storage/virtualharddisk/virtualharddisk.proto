// Copyright (c) Microsoft Corporation.
// Licensed under the Apache v2.0 license.

syntax = "proto3";
option go_package = "github.com/microsoft/moc/rpc/nodeagent/storage";
package moc.nodeagent.storage;

import "google/protobuf/wrappers.proto";
import "common.proto";
import "notification.proto";
import "google/protobuf/empty.proto";

enum VirtualHardDiskType {
	OS_VIRTUALHARDDISK = 0;
	DATADISK_VIRTUALHARDDISK = 1;
}

message VirtualHardDiskRequest {
	repeated VirtualHardDisk VirtualHardDiskSystems = 1;
	Operation OperationType = 2;
}

message VirtualHardDiskResponse {
	repeated VirtualHardDisk VirtualHardDiskSystems = 1;
	google.protobuf.BoolValue Result = 2;
	string  Error = 3;
}

message VirtualHardDisk {
	string name = 1;
	string id = 2;
	string source = 3;
	string path = 4;
	// Storage container name to hold this vhd
	string containerName = 5;
	Status status = 6;
	int64 size = 7;
	bool dynamic = 8;
	int32 blocksizebytes = 9;
	int32 logicalsectorbytes = 10;
	int32 physicalsectorbytes = 11;
	int64 controllernumber  = 12;
	int64 controllerlocation = 13;
	int64 disknumber = 14;
	string virtualmachineName = 15;
	string scsipath = 16;
	VirtualHardDiskType virtualharddisktype = 17;
	Entity entity = 18;
	Tags tags = 19;
}

service VirtualHardDiskAgent {
	rpc Invoke(VirtualHardDiskRequest) returns (VirtualHardDiskResponse) {}
	rpc CheckNotification(google.protobuf.Empty) returns (NotificationResponse) {}
}

