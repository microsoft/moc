// Copyright (c) Microsoft Corporation.
// Licensed under the Apache v2.0 license.

syntax = "proto3";
option go_package = "github.com/microsoft/moc/rpc/nodeagent/storage";
package moc.nodeagent.storage;

import "google/protobuf/wrappers.proto";
import "moc_common_common.proto";
import "moc_common_notification.proto";
import "google/protobuf/empty.proto";
import "moc_common_storageinfo.proto";
import "moc_common_computecommon.proto";
import "google/protobuf/descriptor.proto";

enum VirtualHardDiskType {
	OS_VIRTUALHARDDISK = 0;
	DATADISK_VIRTUALHARDDISK = 1;
}

message VirtualHardDiskRequest {
	repeated VirtualHardDisk VirtualHardDiskSystems = 1;
	Operation OperationType = 2;
}

message VirtualHardDiskResponse {
	repeated VirtualHardDisk VirtualHardDiskSystems = 1;
	google.protobuf.BoolValue Result = 2;
	string  Error = 3;
}

message VirtualHardDiskOperationRequest {
	repeated VirtualHardDisk VirtualHardDisks = 1;
	VirtualHardDiskOperation OperationType = 2;
}

message VirtualHardDiskOperationResponse {
	repeated VirtualHardDisk VirtualHardDisks = 1;
	google.protobuf.BoolValue Result = 2;
	string  Error = 3;
}

message SFSImageProperties {
	string catalogName = 1;
	string audience = 2;
	string version = 3;
	string releaseName = 4;
	uint32 parts = 5;
	string destinationDir = 6;
}

message LocalImageProperties {
	string path = 1 [(sensitive) = true];
}

message CloneImageProperties {
	string cloneSource = 1;
}

message HttpImageProperties {
	string httpURL = 1;
}

message AzureGalleryImageProperties {
	string sasURI = 1 [(sensitive) = true];
	string version = 2;
}

message VirtualHardDisk {
	string name = 1;
	string id = 2;
	string source = 3 [(sensitivejson) = true];
	string path = 4 [(sensitive) = true];
	// Storage container name to hold this vhd
	string containerName = 5;
	Status status = 6;
	int64 size = 7;
	bool dynamic = 8;
	int32 blocksizebytes = 9;
	int32 logicalsectorbytes = 10;
	int32 physicalsectorbytes = 11;
	int64 controllernumber  = 12;
	int64 controllerlocation = 13;
	int64 disknumber = 14;
	string virtualmachineName = 15;
	string scsipath = 16;
	VirtualHardDiskType virtualharddisktype = 17;
	Entity entity = 18;
	Tags tags = 19;
	ImageSource sourceType = 20;
	HyperVGeneration hyperVGeneration = 21; 
	CloudInitDataSource cloudInitDataSource = 22;
	DiskFileFormat diskFileFormat = 23;
	string TargetUrl = 24 [(sensitive) = true];
}

message DiskNotificationRequest {
	string resourceType = 1;
}

service VirtualHardDiskAgent {
	rpc Invoke(VirtualHardDiskRequest) returns (VirtualHardDiskResponse) {}
	rpc CheckNotification(DiskNotificationRequest) returns (NotificationResponse) {}
	rpc Operate(VirtualHardDiskOperationRequest) returns (VirtualHardDiskOperationResponse) {}
}