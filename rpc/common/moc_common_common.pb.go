// Code generated by protoc-gen-go. DO NOT EDIT.
// source: moc_common_common.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Operation int32

const (
	Operation_GET      Operation = 0
	Operation_POST     Operation = 1
	Operation_DELETE   Operation = 2
	Operation_UPDATE   Operation = 3
	Operation_IMPORT   Operation = 4
	Operation_EXPORT   Operation = 5
	Operation_VALIDATE Operation = 6
)

var Operation_name = map[int32]string{
	0: "GET",
	1: "POST",
	2: "DELETE",
	3: "UPDATE",
	4: "IMPORT",
	5: "EXPORT",
	6: "VALIDATE",
}

var Operation_value = map[string]int32{
	"GET":      0,
	"POST":     1,
	"DELETE":   2,
	"UPDATE":   3,
	"IMPORT":   4,
	"EXPORT":   5,
	"VALIDATE": 6,
}

func (x Operation) String() string {
	return proto.EnumName(Operation_name, int32(x))
}

func (Operation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{0}
}

type ProvisionState int32

const (
	ProvisionState_UNKNOWN            ProvisionState = 0
	ProvisionState_CREATING           ProvisionState = 1
	ProvisionState_CREATED            ProvisionState = 2
	ProvisionState_CREATE_FAILED      ProvisionState = 3
	ProvisionState_DELETING           ProvisionState = 4
	ProvisionState_DELETE_FAILED      ProvisionState = 5
	ProvisionState_DELETED            ProvisionState = 6
	ProvisionState_UPDATING           ProvisionState = 7
	ProvisionState_UPDATE_FAILED      ProvisionState = 8
	ProvisionState_UPDATED            ProvisionState = 9
	ProvisionState_PROVISIONING       ProvisionState = 10
	ProvisionState_PROVISIONED        ProvisionState = 11
	ProvisionState_PROVISION_FAILED   ProvisionState = 12
	ProvisionState_DEPROVISIONING     ProvisionState = 13
	ProvisionState_DEPROVISIONED      ProvisionState = 14
	ProvisionState_DEPROVISION_FAILED ProvisionState = 15
	ProvisionState_DELETE_PENDING     ProvisionState = 16
	ProvisionState_IMPORTING          ProvisionState = 17
	ProvisionState_IMPORTED           ProvisionState = 18
	ProvisionState_IMPORT_FAILED      ProvisionState = 19
)

var ProvisionState_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "CREATING",
	2:  "CREATED",
	3:  "CREATE_FAILED",
	4:  "DELETING",
	5:  "DELETE_FAILED",
	6:  "DELETED",
	7:  "UPDATING",
	8:  "UPDATE_FAILED",
	9:  "UPDATED",
	10: "PROVISIONING",
	11: "PROVISIONED",
	12: "PROVISION_FAILED",
	13: "DEPROVISIONING",
	14: "DEPROVISIONED",
	15: "DEPROVISION_FAILED",
	16: "DELETE_PENDING",
	17: "IMPORTING",
	18: "IMPORTED",
	19: "IMPORT_FAILED",
}

var ProvisionState_value = map[string]int32{
	"UNKNOWN":            0,
	"CREATING":           1,
	"CREATED":            2,
	"CREATE_FAILED":      3,
	"DELETING":           4,
	"DELETE_FAILED":      5,
	"DELETED":            6,
	"UPDATING":           7,
	"UPDATE_FAILED":      8,
	"UPDATED":            9,
	"PROVISIONING":       10,
	"PROVISIONED":        11,
	"PROVISION_FAILED":   12,
	"DEPROVISIONING":     13,
	"DEPROVISIONED":      14,
	"DEPROVISION_FAILED": 15,
	"DELETE_PENDING":     16,
	"IMPORTING":          17,
	"IMPORTED":           18,
	"IMPORT_FAILED":      19,
}

func (x ProvisionState) String() string {
	return proto.EnumName(ProvisionState_name, int32(x))
}

func (ProvisionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{1}
}

type HighAvailabilityState int32

const (
	HighAvailabilityState_UNKNOWN_HA_STATE HighAvailabilityState = 0
	HighAvailabilityState_STABLE           HighAvailabilityState = 1
	HighAvailabilityState_PENDING          HighAvailabilityState = 2
)

var HighAvailabilityState_name = map[int32]string{
	0: "UNKNOWN_HA_STATE",
	1: "STABLE",
	2: "PENDING",
}

var HighAvailabilityState_value = map[string]int32{
	"UNKNOWN_HA_STATE": 0,
	"STABLE":           1,
	"PENDING":          2,
}

func (x HighAvailabilityState) String() string {
	return proto.EnumName(HighAvailabilityState_name, int32(x))
}

func (HighAvailabilityState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{2}
}

type HealthState int32

const (
	HealthState_NOTKNOWN HealthState = 0
	HealthState_OK       HealthState = 1
	HealthState_WARNING  HealthState = 2
	HealthState_CRITICAL HealthState = 3
	// The entity went missing from the platform
	HealthState_MISSING  HealthState = 4
	HealthState_DEGRADED HealthState = 5
	// The entity went missing from the agent
	HealthState_NOTFOUND HealthState = 6
)

var HealthState_name = map[int32]string{
	0: "NOTKNOWN",
	1: "OK",
	2: "WARNING",
	3: "CRITICAL",
	4: "MISSING",
	5: "DEGRADED",
	6: "NOTFOUND",
}

var HealthState_value = map[string]int32{
	"NOTKNOWN": 0,
	"OK":       1,
	"WARNING":  2,
	"CRITICAL": 3,
	"MISSING":  4,
	"DEGRADED": 5,
	"NOTFOUND": 6,
}

func (x HealthState) String() string {
	return proto.EnumName(HealthState_name, int32(x))
}

func (HealthState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{3}
}

type ValidationStateCode int32

const (
	ValidationStateCode_NODE_UNREACHABLE        ValidationStateCode = 0
	ValidationStateCode_ENTITY_MISSING          ValidationStateCode = 1
	ValidationStateCode_CLIENT_CREATION_FAILURE ValidationStateCode = 2
	ValidationStateCode_FORMAT_INVALID          ValidationStateCode = 3
	ValidationStateCode_INFO_MISSING            ValidationStateCode = 4
	ValidationStateCode_INFO_MISMATCH           ValidationStateCode = 5
)

var ValidationStateCode_name = map[int32]string{
	0: "NODE_UNREACHABLE",
	1: "ENTITY_MISSING",
	2: "CLIENT_CREATION_FAILURE",
	3: "FORMAT_INVALID",
	4: "INFO_MISSING",
	5: "INFO_MISMATCH",
}

var ValidationStateCode_value = map[string]int32{
	"NODE_UNREACHABLE":        0,
	"ENTITY_MISSING":          1,
	"CLIENT_CREATION_FAILURE": 2,
	"FORMAT_INVALID":          3,
	"INFO_MISSING":            4,
	"INFO_MISMATCH":           5,
}

func (x ValidationStateCode) String() string {
	return proto.EnumName(ValidationStateCode_name, int32(x))
}

func (ValidationStateCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{4}
}

type ClientType int32

const (
	ClientType_CONTROLPLANE   ClientType = 0
	ClientType_EXTERNALCLIENT ClientType = 1
	ClientType_NODE           ClientType = 2
	ClientType_ADMIN          ClientType = 3
	ClientType_BAREMETAL      ClientType = 4
	ClientType_LOADBALANCER   ClientType = 5
	ClientType_HOST           ClientType = 6
)

var ClientType_name = map[int32]string{
	0: "CONTROLPLANE",
	1: "EXTERNALCLIENT",
	2: "NODE",
	3: "ADMIN",
	4: "BAREMETAL",
	5: "LOADBALANCER",
	6: "HOST",
}

var ClientType_value = map[string]int32{
	"CONTROLPLANE":   0,
	"EXTERNALCLIENT": 1,
	"NODE":           2,
	"ADMIN":          3,
	"BAREMETAL":      4,
	"LOADBALANCER":   5,
	"HOST":           6,
}

func (x ClientType) String() string {
	return proto.EnumName(ClientType_name, int32(x))
}

func (ClientType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{5}
}

type AuthenticationType int32

const (
	AuthenticationType_SELFSIGNED AuthenticationType = 0
	AuthenticationType_CASIGNED   AuthenticationType = 1
)

var AuthenticationType_name = map[int32]string{
	0: "SELFSIGNED",
	1: "CASIGNED",
}

var AuthenticationType_value = map[string]int32{
	"SELFSIGNED": 0,
	"CASIGNED":   1,
}

func (x AuthenticationType) String() string {
	return proto.EnumName(AuthenticationType_name, int32(x))
}

func (AuthenticationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{6}
}

type ProviderType int32

const (
	ProviderType_AnyProvider            ProviderType = 0
	ProviderType_VirtualMachine         ProviderType = 1
	ProviderType_VirtualMachineScaleSet ProviderType = 2
	ProviderType_LoadBalancer           ProviderType = 3
	ProviderType_VirtualNetwork         ProviderType = 4
	ProviderType_VirtualHardDisk        ProviderType = 5
	ProviderType_GalleryImage           ProviderType = 6
	ProviderType_VirtualMachineImage    ProviderType = 7
	ProviderType_NetworkInterface       ProviderType = 8
	ProviderType_Certificate            ProviderType = 9
	ProviderType_Key                    ProviderType = 10
	ProviderType_Secret                 ProviderType = 11
	ProviderType_KeyVault               ProviderType = 12
	ProviderType_Identity               ProviderType = 13
	ProviderType_Role                   ProviderType = 14
	ProviderType_RoleAssignment         ProviderType = 15
	ProviderType_Kubernetes             ProviderType = 16
	ProviderType_Cluster                ProviderType = 17
	ProviderType_ControlPlane           ProviderType = 18
	ProviderType_Group                  ProviderType = 19
	ProviderType_Node                   ProviderType = 20
	ProviderType_Location               ProviderType = 21
	ProviderType_StorageContainer       ProviderType = 22
	ProviderType_StorageFile            ProviderType = 23
	ProviderType_StorageDirectory       ProviderType = 24
	ProviderType_Subscription           ProviderType = 25
	ProviderType_VipPool                ProviderType = 26
	ProviderType_MacPool                ProviderType = 27
	ProviderType_EtcdCluster            ProviderType = 28
	ProviderType_EtcdServer             ProviderType = 29
	ProviderType_BareMetalMachine       ProviderType = 30
	ProviderType_CredentialMonitor      ProviderType = 31
	ProviderType_Logging                ProviderType = 32
	ProviderType_Recovery               ProviderType = 33
	ProviderType_Debug                  ProviderType = 34
	ProviderType_BareMetalHost          ProviderType = 35
	ProviderType_Authentication         ProviderType = 36
	ProviderType_HealthMonitor          ProviderType = 37
	ProviderType_LogicalNetwork         ProviderType = 38
	ProviderType_AvailabilitySet        ProviderType = 39
	ProviderType_NetworkSecurityGroup   ProviderType = 40
)

var ProviderType_name = map[int32]string{
	0:  "AnyProvider",
	1:  "VirtualMachine",
	2:  "VirtualMachineScaleSet",
	3:  "LoadBalancer",
	4:  "VirtualNetwork",
	5:  "VirtualHardDisk",
	6:  "GalleryImage",
	7:  "VirtualMachineImage",
	8:  "NetworkInterface",
	9:  "Certificate",
	10: "Key",
	11: "Secret",
	12: "KeyVault",
	13: "Identity",
	14: "Role",
	15: "RoleAssignment",
	16: "Kubernetes",
	17: "Cluster",
	18: "ControlPlane",
	19: "Group",
	20: "Node",
	21: "Location",
	22: "StorageContainer",
	23: "StorageFile",
	24: "StorageDirectory",
	25: "Subscription",
	26: "VipPool",
	27: "MacPool",
	28: "EtcdCluster",
	29: "EtcdServer",
	30: "BareMetalMachine",
	31: "CredentialMonitor",
	32: "Logging",
	33: "Recovery",
	34: "Debug",
	35: "BareMetalHost",
	36: "Authentication",
	37: "HealthMonitor",
	38: "LogicalNetwork",
	39: "AvailabilitySet",
	40: "NetworkSecurityGroup",
}

var ProviderType_value = map[string]int32{
	"AnyProvider":            0,
	"VirtualMachine":         1,
	"VirtualMachineScaleSet": 2,
	"LoadBalancer":           3,
	"VirtualNetwork":         4,
	"VirtualHardDisk":        5,
	"GalleryImage":           6,
	"VirtualMachineImage":    7,
	"NetworkInterface":       8,
	"Certificate":            9,
	"Key":                    10,
	"Secret":                 11,
	"KeyVault":               12,
	"Identity":               13,
	"Role":                   14,
	"RoleAssignment":         15,
	"Kubernetes":             16,
	"Cluster":                17,
	"ControlPlane":           18,
	"Group":                  19,
	"Node":                   20,
	"Location":               21,
	"StorageContainer":       22,
	"StorageFile":            23,
	"StorageDirectory":       24,
	"Subscription":           25,
	"VipPool":                26,
	"MacPool":                27,
	"EtcdCluster":            28,
	"EtcdServer":             29,
	"BareMetalMachine":       30,
	"CredentialMonitor":      31,
	"Logging":                32,
	"Recovery":               33,
	"Debug":                  34,
	"BareMetalHost":          35,
	"Authentication":         36,
	"HealthMonitor":          37,
	"LogicalNetwork":         38,
	"AvailabilitySet":        39,
	"NetworkSecurityGroup":   40,
}

func (x ProviderType) String() string {
	return proto.EnumName(ProviderType_name, int32(x))
}

func (ProviderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{7}
}

// Operations specific to a provider
// Format is [Provider]_[Operation]
type ProviderAccessOperation int32

const (
	ProviderAccessOperation_Unspecified                       ProviderAccessOperation = 0
	ProviderAccessOperation_Authentication_Login              ProviderAccessOperation = 100
	ProviderAccessOperation_Certificate_Create                ProviderAccessOperation = 200
	ProviderAccessOperation_Certificate_Update                ProviderAccessOperation = 201
	ProviderAccessOperation_Certificate_Get                   ProviderAccessOperation = 202
	ProviderAccessOperation_Certificate_Delete                ProviderAccessOperation = 203
	ProviderAccessOperation_Certificate_Sign                  ProviderAccessOperation = 204
	ProviderAccessOperation_Certificate_Renew                 ProviderAccessOperation = 205
	ProviderAccessOperation_Identity_Create                   ProviderAccessOperation = 300
	ProviderAccessOperation_Identity_Update                   ProviderAccessOperation = 301
	ProviderAccessOperation_Identity_Revoke                   ProviderAccessOperation = 302
	ProviderAccessOperation_Identity_Rotate                   ProviderAccessOperation = 303
	ProviderAccessOperation_IdentityCertificate_Create        ProviderAccessOperation = 400
	ProviderAccessOperation_IdentityCertificate_Update        ProviderAccessOperation = 401
	ProviderAccessOperation_IdentityCertificate_Renew         ProviderAccessOperation = 402
	ProviderAccessOperation_Key_Create                        ProviderAccessOperation = 500
	ProviderAccessOperation_Key_Update                        ProviderAccessOperation = 501
	ProviderAccessOperation_Key_Encrypt                       ProviderAccessOperation = 502
	ProviderAccessOperation_Key_Decrypt                       ProviderAccessOperation = 503
	ProviderAccessOperation_Key_WrapKey                       ProviderAccessOperation = 504
	ProviderAccessOperation_Key_UnwrapKey                     ProviderAccessOperation = 505
	ProviderAccessOperation_Key_Sign                          ProviderAccessOperation = 506
	ProviderAccessOperation_Key_Verify                        ProviderAccessOperation = 507
	ProviderAccessOperation_VirtualMachine_Create             ProviderAccessOperation = 600
	ProviderAccessOperation_VirtualMachine_Update             ProviderAccessOperation = 601
	ProviderAccessOperation_VirtualMachine_Delete             ProviderAccessOperation = 602
	ProviderAccessOperation_VirtualMachine_Validate           ProviderAccessOperation = 603
	ProviderAccessOperation_VirtualMachine_Start              ProviderAccessOperation = 604
	ProviderAccessOperation_VirtualMachine_Stop               ProviderAccessOperation = 605
	ProviderAccessOperation_VirtualMachine_Reset              ProviderAccessOperation = 606
	ProviderAccessOperation_VirtualMachine_Repair_Guest_Agent ProviderAccessOperation = 607
	ProviderAccessOperation_VirtualMachine_Pause              ProviderAccessOperation = 608
	ProviderAccessOperation_VirtualMachine_Save               ProviderAccessOperation = 609
	ProviderAccessOperation_Cluster_Create                    ProviderAccessOperation = 700
	ProviderAccessOperation_Cluster_Update                    ProviderAccessOperation = 701
	ProviderAccessOperation_Cluster_LoadCluster               ProviderAccessOperation = 702
	ProviderAccessOperation_Cluster_UnloadCluster             ProviderAccessOperation = 703
	ProviderAccessOperation_Cluster_GetCluster                ProviderAccessOperation = 704
	ProviderAccessOperation_Cluster_GetNodes                  ProviderAccessOperation = 705
	ProviderAccessOperation_Debug_DebugServer                 ProviderAccessOperation = 800
	ProviderAccessOperation_Debug_StackTrace                  ProviderAccessOperation = 801
	ProviderAccessOperation_BaremetalHost_Create              ProviderAccessOperation = 900
	ProviderAccessOperation_BaremetalHost_Update              ProviderAccessOperation = 901
	ProviderAccessOperation_BaremetalMachine_Create           ProviderAccessOperation = 1000
	ProviderAccessOperation_BaremetalMachine_Update           ProviderAccessOperation = 1001
	ProviderAccessOperation_ControlPlane_Create               ProviderAccessOperation = 1100
	ProviderAccessOperation_ControlPlane_Update               ProviderAccessOperation = 1101
	ProviderAccessOperation_EtcdCluster_Create                ProviderAccessOperation = 1200
	ProviderAccessOperation_EtcdCluster_Update                ProviderAccessOperation = 1201
	ProviderAccessOperation_EtcdServer_Create                 ProviderAccessOperation = 1300
	ProviderAccessOperation_EtcdServer_Update                 ProviderAccessOperation = 1301
	ProviderAccessOperation_GalleryImage_Create               ProviderAccessOperation = 1400
	ProviderAccessOperation_GalleryImage_Update               ProviderAccessOperation = 1401
	ProviderAccessOperation_Group_Create                      ProviderAccessOperation = 1500
	ProviderAccessOperation_Group_Update                      ProviderAccessOperation = 1501
	ProviderAccessOperation_KeyVault_Create                   ProviderAccessOperation = 1600
	ProviderAccessOperation_KeyVault_Update                   ProviderAccessOperation = 1601
	ProviderAccessOperation_Kubernetes_Create                 ProviderAccessOperation = 1700
	ProviderAccessOperation_Kubernetes_Update                 ProviderAccessOperation = 1701
	ProviderAccessOperation_LoadBalancer_Create               ProviderAccessOperation = 1800
	ProviderAccessOperation_LoadBalancer_Update               ProviderAccessOperation = 1801
	ProviderAccessOperation_Location_Create                   ProviderAccessOperation = 1900
	ProviderAccessOperation_Location_Update                   ProviderAccessOperation = 1901
	ProviderAccessOperation_Macpool_Create                    ProviderAccessOperation = 2000
	ProviderAccessOperation_Macpool_Update                    ProviderAccessOperation = 2001
	ProviderAccessOperation_NetworkInterface_Create           ProviderAccessOperation = 2100
	ProviderAccessOperation_NetworkInterface_Update           ProviderAccessOperation = 2101
	ProviderAccessOperation_Node_Create                       ProviderAccessOperation = 2200
	ProviderAccessOperation_Node_Update                       ProviderAccessOperation = 2201
	ProviderAccessOperation_Recovery_Create                   ProviderAccessOperation = 2300
	ProviderAccessOperation_Recovery_Update                   ProviderAccessOperation = 2301
	ProviderAccessOperation_Role_Create                       ProviderAccessOperation = 2400
	ProviderAccessOperation_Role_Update                       ProviderAccessOperation = 2401
	ProviderAccessOperation_RoleAssignment_Create             ProviderAccessOperation = 2500
	ProviderAccessOperation_RoleAssignment_Update             ProviderAccessOperation = 2501
	ProviderAccessOperation_Secret_Create                     ProviderAccessOperation = 2600
	ProviderAccessOperation_Secret_Update                     ProviderAccessOperation = 2601
	ProviderAccessOperation_StorageContainer_Create           ProviderAccessOperation = 2700
	ProviderAccessOperation_StorageContainer_Update           ProviderAccessOperation = 2701
	ProviderAccessOperation_Subscription_Create               ProviderAccessOperation = 2800
	ProviderAccessOperation_Subscription_Update               ProviderAccessOperation = 2801
	ProviderAccessOperation_Validation_Validate               ProviderAccessOperation = 2900
	ProviderAccessOperation_VipPool_Create                    ProviderAccessOperation = 3000
	ProviderAccessOperation_VipPool_Update                    ProviderAccessOperation = 3001
	ProviderAccessOperation_VirtualHardDisk_Create            ProviderAccessOperation = 3100
	ProviderAccessOperation_VirtualHardDisk_Update            ProviderAccessOperation = 3101
	ProviderAccessOperation_VirtualMachineImage_Create        ProviderAccessOperation = 3200
	ProviderAccessOperation_VirtualMachineImage_Update        ProviderAccessOperation = 3201
	ProviderAccessOperation_VirtualMachineScaleSet_Create     ProviderAccessOperation = 3300
	ProviderAccessOperation_VirtualMachineScaleSet_Update     ProviderAccessOperation = 3301
	ProviderAccessOperation_VirtualNetwork_Create             ProviderAccessOperation = 3400
	ProviderAccessOperation_VirtualNetwork_Update             ProviderAccessOperation = 3401
	ProviderAccessOperation_AvailabilitySet_Create            ProviderAccessOperation = 3500
	ProviderAccessOperation_AvailabilitySet_Delete            ProviderAccessOperation = 3501
	ProviderAccessOperation_NetworkSecurityGroup_Create       ProviderAccessOperation = 3600
	ProviderAccessOperation_NetworkSecurityGroup_Update       ProviderAccessOperation = 3601
)

var ProviderAccessOperation_name = map[int32]string{
	0:    "Unspecified",
	100:  "Authentication_Login",
	200:  "Certificate_Create",
	201:  "Certificate_Update",
	202:  "Certificate_Get",
	203:  "Certificate_Delete",
	204:  "Certificate_Sign",
	205:  "Certificate_Renew",
	300:  "Identity_Create",
	301:  "Identity_Update",
	302:  "Identity_Revoke",
	303:  "Identity_Rotate",
	400:  "IdentityCertificate_Create",
	401:  "IdentityCertificate_Update",
	402:  "IdentityCertificate_Renew",
	500:  "Key_Create",
	501:  "Key_Update",
	502:  "Key_Encrypt",
	503:  "Key_Decrypt",
	504:  "Key_WrapKey",
	505:  "Key_UnwrapKey",
	506:  "Key_Sign",
	507:  "Key_Verify",
	600:  "VirtualMachine_Create",
	601:  "VirtualMachine_Update",
	602:  "VirtualMachine_Delete",
	603:  "VirtualMachine_Validate",
	604:  "VirtualMachine_Start",
	605:  "VirtualMachine_Stop",
	606:  "VirtualMachine_Reset",
	607:  "VirtualMachine_Repair_Guest_Agent",
	608:  "VirtualMachine_Pause",
	609:  "VirtualMachine_Save",
	700:  "Cluster_Create",
	701:  "Cluster_Update",
	702:  "Cluster_LoadCluster",
	703:  "Cluster_UnloadCluster",
	704:  "Cluster_GetCluster",
	705:  "Cluster_GetNodes",
	800:  "Debug_DebugServer",
	801:  "Debug_StackTrace",
	900:  "BaremetalHost_Create",
	901:  "BaremetalHost_Update",
	1000: "BaremetalMachine_Create",
	1001: "BaremetalMachine_Update",
	1100: "ControlPlane_Create",
	1101: "ControlPlane_Update",
	1200: "EtcdCluster_Create",
	1201: "EtcdCluster_Update",
	1300: "EtcdServer_Create",
	1301: "EtcdServer_Update",
	1400: "GalleryImage_Create",
	1401: "GalleryImage_Update",
	1500: "Group_Create",
	1501: "Group_Update",
	1600: "KeyVault_Create",
	1601: "KeyVault_Update",
	1700: "Kubernetes_Create",
	1701: "Kubernetes_Update",
	1800: "LoadBalancer_Create",
	1801: "LoadBalancer_Update",
	1900: "Location_Create",
	1901: "Location_Update",
	2000: "Macpool_Create",
	2001: "Macpool_Update",
	2100: "NetworkInterface_Create",
	2101: "NetworkInterface_Update",
	2200: "Node_Create",
	2201: "Node_Update",
	2300: "Recovery_Create",
	2301: "Recovery_Update",
	2400: "Role_Create",
	2401: "Role_Update",
	2500: "RoleAssignment_Create",
	2501: "RoleAssignment_Update",
	2600: "Secret_Create",
	2601: "Secret_Update",
	2700: "StorageContainer_Create",
	2701: "StorageContainer_Update",
	2800: "Subscription_Create",
	2801: "Subscription_Update",
	2900: "Validation_Validate",
	3000: "VipPool_Create",
	3001: "VipPool_Update",
	3100: "VirtualHardDisk_Create",
	3101: "VirtualHardDisk_Update",
	3200: "VirtualMachineImage_Create",
	3201: "VirtualMachineImage_Update",
	3300: "VirtualMachineScaleSet_Create",
	3301: "VirtualMachineScaleSet_Update",
	3400: "VirtualNetwork_Create",
	3401: "VirtualNetwork_Update",
	3500: "AvailabilitySet_Create",
	3501: "AvailabilitySet_Delete",
	3600: "NetworkSecurityGroup_Create",
	3601: "NetworkSecurityGroup_Update",
}

var ProviderAccessOperation_value = map[string]int32{
	"Unspecified":                       0,
	"Authentication_Login":              100,
	"Certificate_Create":                200,
	"Certificate_Update":                201,
	"Certificate_Get":                   202,
	"Certificate_Delete":                203,
	"Certificate_Sign":                  204,
	"Certificate_Renew":                 205,
	"Identity_Create":                   300,
	"Identity_Update":                   301,
	"Identity_Revoke":                   302,
	"Identity_Rotate":                   303,
	"IdentityCertificate_Create":        400,
	"IdentityCertificate_Update":        401,
	"IdentityCertificate_Renew":         402,
	"Key_Create":                        500,
	"Key_Update":                        501,
	"Key_Encrypt":                       502,
	"Key_Decrypt":                       503,
	"Key_WrapKey":                       504,
	"Key_UnwrapKey":                     505,
	"Key_Sign":                          506,
	"Key_Verify":                        507,
	"VirtualMachine_Create":             600,
	"VirtualMachine_Update":             601,
	"VirtualMachine_Delete":             602,
	"VirtualMachine_Validate":           603,
	"VirtualMachine_Start":              604,
	"VirtualMachine_Stop":               605,
	"VirtualMachine_Reset":              606,
	"VirtualMachine_Repair_Guest_Agent": 607,
	"VirtualMachine_Pause":              608,
	"VirtualMachine_Save":               609,
	"Cluster_Create":                    700,
	"Cluster_Update":                    701,
	"Cluster_LoadCluster":               702,
	"Cluster_UnloadCluster":             703,
	"Cluster_GetCluster":                704,
	"Cluster_GetNodes":                  705,
	"Debug_DebugServer":                 800,
	"Debug_StackTrace":                  801,
	"BaremetalHost_Create":              900,
	"BaremetalHost_Update":              901,
	"BaremetalMachine_Create":           1000,
	"BaremetalMachine_Update":           1001,
	"ControlPlane_Create":               1100,
	"ControlPlane_Update":               1101,
	"EtcdCluster_Create":                1200,
	"EtcdCluster_Update":                1201,
	"EtcdServer_Create":                 1300,
	"EtcdServer_Update":                 1301,
	"GalleryImage_Create":               1400,
	"GalleryImage_Update":               1401,
	"Group_Create":                      1500,
	"Group_Update":                      1501,
	"KeyVault_Create":                   1600,
	"KeyVault_Update":                   1601,
	"Kubernetes_Create":                 1700,
	"Kubernetes_Update":                 1701,
	"LoadBalancer_Create":               1800,
	"LoadBalancer_Update":               1801,
	"Location_Create":                   1900,
	"Location_Update":                   1901,
	"Macpool_Create":                    2000,
	"Macpool_Update":                    2001,
	"NetworkInterface_Create":           2100,
	"NetworkInterface_Update":           2101,
	"Node_Create":                       2200,
	"Node_Update":                       2201,
	"Recovery_Create":                   2300,
	"Recovery_Update":                   2301,
	"Role_Create":                       2400,
	"Role_Update":                       2401,
	"RoleAssignment_Create":             2500,
	"RoleAssignment_Update":             2501,
	"Secret_Create":                     2600,
	"Secret_Update":                     2601,
	"StorageContainer_Create":           2700,
	"StorageContainer_Update":           2701,
	"Subscription_Create":               2800,
	"Subscription_Update":               2801,
	"Validation_Validate":               2900,
	"VipPool_Create":                    3000,
	"VipPool_Update":                    3001,
	"VirtualHardDisk_Create":            3100,
	"VirtualHardDisk_Update":            3101,
	"VirtualMachineImage_Create":        3200,
	"VirtualMachineImage_Update":        3201,
	"VirtualMachineScaleSet_Create":     3300,
	"VirtualMachineScaleSet_Update":     3301,
	"VirtualNetwork_Create":             3400,
	"VirtualNetwork_Update":             3401,
	"AvailabilitySet_Create":            3500,
	"AvailabilitySet_Delete":            3501,
	"NetworkSecurityGroup_Create":       3600,
	"NetworkSecurityGroup_Update":       3601,
}

func (x ProviderAccessOperation) String() string {
	return proto.EnumName(ProviderAccessOperation_name, int32(x))
}

func (ProviderAccessOperation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{8}
}

type ImageSource int32

const (
	ImageSource_LOCAL_SOURCE    ImageSource = 0
	ImageSource_SFS_SOURCE      ImageSource = 1
	ImageSource_HTTP_SOURCE     ImageSource = 2
	ImageSource_CLONE_SOURCE    ImageSource = 3
	ImageSource_VMOSDISK_SOURCE ImageSource = 4
)

var ImageSource_name = map[int32]string{
	0: "LOCAL_SOURCE",
	1: "SFS_SOURCE",
	2: "HTTP_SOURCE",
	3: "CLONE_SOURCE",
	4: "VMOSDISK_SOURCE",
}

var ImageSource_value = map[string]int32{
	"LOCAL_SOURCE":    0,
	"SFS_SOURCE":      1,
	"HTTP_SOURCE":     2,
	"CLONE_SOURCE":    3,
	"VMOSDISK_SOURCE": 4,
}

func (x ImageSource) String() string {
	return proto.EnumName(ImageSource_name, int32(x))
}

func (ImageSource) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{9}
}

type HyperVGeneration int32

const (
	HyperVGeneration_HyperVGenerationV2 HyperVGeneration = 0
	HyperVGeneration_HyperVGenerationV1 HyperVGeneration = 1
)

var HyperVGeneration_name = map[int32]string{
	0: "HyperVGenerationV2",
	1: "HyperVGenerationV1",
}

var HyperVGeneration_value = map[string]int32{
	"HyperVGenerationV2": 0,
	"HyperVGenerationV1": 1,
}

func (x HyperVGeneration) String() string {
	return proto.EnumName(HyperVGeneration_name, int32(x))
}

func (HyperVGeneration) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{10}
}

type DiskFileFormat int32

const (
	DiskFileFormat_DiskFileFormatVHDX DiskFileFormat = 0
	DiskFileFormat_DiskFileFormatVHD  DiskFileFormat = 1
)

var DiskFileFormat_name = map[int32]string{
	0: "DiskFileFormatVHDX",
	1: "DiskFileFormatVHD",
}

var DiskFileFormat_value = map[string]int32{
	"DiskFileFormatVHDX": 0,
	"DiskFileFormatVHD":  1,
}

func (x DiskFileFormat) String() string {
	return proto.EnumName(DiskFileFormat_name, int32(x))
}

func (DiskFileFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{11}
}

type CloudInitDataSource int32

const (
	CloudInitDataSource_NoCloud CloudInitDataSource = 0
	CloudInitDataSource_Azure   CloudInitDataSource = 1
)

var CloudInitDataSource_name = map[int32]string{
	0: "NoCloud",
	1: "Azure",
}

var CloudInitDataSource_value = map[string]int32{
	"NoCloud": 0,
	"Azure":   1,
}

func (x CloudInitDataSource) String() string {
	return proto.EnumName(CloudInitDataSource_name, int32(x))
}

func (CloudInitDataSource) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{12}
}

type Error struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Parameters           string   `protobuf:"bytes,3,opt,name=Parameters,proto3" json:"Parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{0}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetParameters() string {
	if m != nil {
		return m.Parameters
	}
	return ""
}

type ProvisionStatus struct {
	CurrentState         ProvisionState `protobuf:"varint,1,opt,name=currentState,proto3,enum=moc.ProvisionState" json:"currentState,omitempty"`
	PreviousState        ProvisionState `protobuf:"varint,2,opt,name=previousState,proto3,enum=moc.ProvisionState" json:"previousState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ProvisionStatus) Reset()         { *m = ProvisionStatus{} }
func (m *ProvisionStatus) String() string { return proto.CompactTextString(m) }
func (*ProvisionStatus) ProtoMessage()    {}
func (*ProvisionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{1}
}

func (m *ProvisionStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProvisionStatus.Unmarshal(m, b)
}
func (m *ProvisionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProvisionStatus.Marshal(b, m, deterministic)
}
func (m *ProvisionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvisionStatus.Merge(m, src)
}
func (m *ProvisionStatus) XXX_Size() int {
	return xxx_messageInfo_ProvisionStatus.Size(m)
}
func (m *ProvisionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvisionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ProvisionStatus proto.InternalMessageInfo

func (m *ProvisionStatus) GetCurrentState() ProvisionState {
	if m != nil {
		return m.CurrentState
	}
	return ProvisionState_UNKNOWN
}

func (m *ProvisionStatus) GetPreviousState() ProvisionState {
	if m != nil {
		return m.PreviousState
	}
	return ProvisionState_UNKNOWN
}

type DownloadStatus struct {
	ProgressPercentage   int64    `protobuf:"varint,1,opt,name=progressPercentage,proto3" json:"progressPercentage,omitempty"`
	DownloadSizeInBytes  int64    `protobuf:"varint,2,opt,name=downloadSizeInBytes,proto3" json:"downloadSizeInBytes,omitempty"`
	FileSizeInBytes      int64    `protobuf:"varint,3,opt,name=fileSizeInBytes,proto3" json:"fileSizeInBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadStatus) Reset()         { *m = DownloadStatus{} }
func (m *DownloadStatus) String() string { return proto.CompactTextString(m) }
func (*DownloadStatus) ProtoMessage()    {}
func (*DownloadStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{2}
}

func (m *DownloadStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadStatus.Unmarshal(m, b)
}
func (m *DownloadStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadStatus.Marshal(b, m, deterministic)
}
func (m *DownloadStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadStatus.Merge(m, src)
}
func (m *DownloadStatus) XXX_Size() int {
	return xxx_messageInfo_DownloadStatus.Size(m)
}
func (m *DownloadStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadStatus.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadStatus proto.InternalMessageInfo

func (m *DownloadStatus) GetProgressPercentage() int64 {
	if m != nil {
		return m.ProgressPercentage
	}
	return 0
}

func (m *DownloadStatus) GetDownloadSizeInBytes() int64 {
	if m != nil {
		return m.DownloadSizeInBytes
	}
	return 0
}

func (m *DownloadStatus) GetFileSizeInBytes() int64 {
	if m != nil {
		return m.FileSizeInBytes
	}
	return 0
}

type Health struct {
	CurrentState         HealthState `protobuf:"varint,1,opt,name=currentState,proto3,enum=moc.HealthState" json:"currentState,omitempty"`
	PreviousState        HealthState `protobuf:"varint,2,opt,name=previousState,proto3,enum=moc.HealthState" json:"previousState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Health) Reset()         { *m = Health{} }
func (m *Health) String() string { return proto.CompactTextString(m) }
func (*Health) ProtoMessage()    {}
func (*Health) Descriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{3}
}

func (m *Health) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Health.Unmarshal(m, b)
}
func (m *Health) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Health.Marshal(b, m, deterministic)
}
func (m *Health) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Health.Merge(m, src)
}
func (m *Health) XXX_Size() int {
	return xxx_messageInfo_Health.Size(m)
}
func (m *Health) XXX_DiscardUnknown() {
	xxx_messageInfo_Health.DiscardUnknown(m)
}

var xxx_messageInfo_Health proto.InternalMessageInfo

func (m *Health) GetCurrentState() HealthState {
	if m != nil {
		return m.CurrentState
	}
	return HealthState_NOTKNOWN
}

func (m *Health) GetPreviousState() HealthState {
	if m != nil {
		return m.PreviousState
	}
	return HealthState_NOTKNOWN
}

type ValidationState struct {
	Code                 ValidationStateCode `protobuf:"varint,1,opt,name=code,proto3,enum=moc.ValidationStateCode" json:"code,omitempty"`
	Message              string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Recommendation       string              `protobuf:"bytes,3,opt,name=recommendation,proto3" json:"recommendation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ValidationState) Reset()         { *m = ValidationState{} }
func (m *ValidationState) String() string { return proto.CompactTextString(m) }
func (*ValidationState) ProtoMessage()    {}
func (*ValidationState) Descriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{4}
}

func (m *ValidationState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidationState.Unmarshal(m, b)
}
func (m *ValidationState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidationState.Marshal(b, m, deterministic)
}
func (m *ValidationState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidationState.Merge(m, src)
}
func (m *ValidationState) XXX_Size() int {
	return xxx_messageInfo_ValidationState.Size(m)
}
func (m *ValidationState) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidationState.DiscardUnknown(m)
}

var xxx_messageInfo_ValidationState proto.InternalMessageInfo

func (m *ValidationState) GetCode() ValidationStateCode {
	if m != nil {
		return m.Code
	}
	return ValidationStateCode_NODE_UNREACHABLE
}

func (m *ValidationState) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ValidationState) GetRecommendation() string {
	if m != nil {
		return m.Recommendation
	}
	return ""
}

type ValidationStatus struct {
	ValidationState      []*ValidationState `protobuf:"bytes,1,rep,name=validationState,proto3" json:"validationState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ValidationStatus) Reset()         { *m = ValidationStatus{} }
func (m *ValidationStatus) String() string { return proto.CompactTextString(m) }
func (*ValidationStatus) ProtoMessage()    {}
func (*ValidationStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{5}
}

func (m *ValidationStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidationStatus.Unmarshal(m, b)
}
func (m *ValidationStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidationStatus.Marshal(b, m, deterministic)
}
func (m *ValidationStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidationStatus.Merge(m, src)
}
func (m *ValidationStatus) XXX_Size() int {
	return xxx_messageInfo_ValidationStatus.Size(m)
}
func (m *ValidationStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidationStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ValidationStatus proto.InternalMessageInfo

func (m *ValidationStatus) GetValidationState() []*ValidationState {
	if m != nil {
		return m.ValidationState
	}
	return nil
}

type Version struct {
	Number               string   `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{6}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

type Status struct {
	Health               *Health           `protobuf:"bytes,1,opt,name=health,proto3" json:"health,omitempty"`
	ProvisioningStatus   *ProvisionStatus  `protobuf:"bytes,2,opt,name=provisioningStatus,proto3" json:"provisioningStatus,omitempty"`
	LastError            *Error            `protobuf:"bytes,3,opt,name=lastError,proto3" json:"lastError,omitempty"`
	Version              *Version          `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	DownloadStatus       *DownloadStatus   `protobuf:"bytes,5,opt,name=downloadStatus,proto3" json:"downloadStatus,omitempty"`
	ValidationStatus     *ValidationStatus `protobuf:"bytes,6,opt,name=validationStatus,proto3" json:"validationStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{7}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetHealth() *Health {
	if m != nil {
		return m.Health
	}
	return nil
}

func (m *Status) GetProvisioningStatus() *ProvisionStatus {
	if m != nil {
		return m.ProvisioningStatus
	}
	return nil
}

func (m *Status) GetLastError() *Error {
	if m != nil {
		return m.LastError
	}
	return nil
}

func (m *Status) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Status) GetDownloadStatus() *DownloadStatus {
	if m != nil {
		return m.DownloadStatus
	}
	return nil
}

func (m *Status) GetValidationStatus() *ValidationStatus {
	if m != nil {
		return m.ValidationStatus
	}
	return nil
}

type Entity struct {
	IsPlaceholder        bool     `protobuf:"varint,1,opt,name=IsPlaceholder,proto3" json:"IsPlaceholder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{8}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetIsPlaceholder() bool {
	if m != nil {
		return m.IsPlaceholder
	}
	return false
}

type Tag struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{9}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Tag) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Tags struct {
	Tags                 []*Tag   `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tags) Reset()         { *m = Tags{} }
func (m *Tags) String() string { return proto.CompactTextString(m) }
func (*Tags) ProtoMessage()    {}
func (*Tags) Descriptor() ([]byte, []int) {
	return fileDescriptor_681f78e46755eb93, []int{10}
}

func (m *Tags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tags.Unmarshal(m, b)
}
func (m *Tags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tags.Marshal(b, m, deterministic)
}
func (m *Tags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tags.Merge(m, src)
}
func (m *Tags) XXX_Size() int {
	return xxx_messageInfo_Tags.Size(m)
}
func (m *Tags) XXX_DiscardUnknown() {
	xxx_messageInfo_Tags.DiscardUnknown(m)
}

var xxx_messageInfo_Tags proto.InternalMessageInfo

func (m *Tags) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

var E_Sensitive = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         50001,
	Name:          "moc.sensitive",
	Tag:           "varint,50001,opt,name=sensitive",
	Filename:      "moc_common_common.proto",
}

func init() {
	proto.RegisterEnum("moc.Operation", Operation_name, Operation_value)
	proto.RegisterEnum("moc.ProvisionState", ProvisionState_name, ProvisionState_value)
	proto.RegisterEnum("moc.HighAvailabilityState", HighAvailabilityState_name, HighAvailabilityState_value)
	proto.RegisterEnum("moc.HealthState", HealthState_name, HealthState_value)
	proto.RegisterEnum("moc.ValidationStateCode", ValidationStateCode_name, ValidationStateCode_value)
	proto.RegisterEnum("moc.ClientType", ClientType_name, ClientType_value)
	proto.RegisterEnum("moc.AuthenticationType", AuthenticationType_name, AuthenticationType_value)
	proto.RegisterEnum("moc.ProviderType", ProviderType_name, ProviderType_value)
	proto.RegisterEnum("moc.ProviderAccessOperation", ProviderAccessOperation_name, ProviderAccessOperation_value)
	proto.RegisterEnum("moc.ImageSource", ImageSource_name, ImageSource_value)
	proto.RegisterEnum("moc.HyperVGeneration", HyperVGeneration_name, HyperVGeneration_value)
	proto.RegisterEnum("moc.DiskFileFormat", DiskFileFormat_name, DiskFileFormat_value)
	proto.RegisterEnum("moc.CloudInitDataSource", CloudInitDataSource_name, CloudInitDataSource_value)
	proto.RegisterType((*Error)(nil), "moc.Error")
	proto.RegisterType((*ProvisionStatus)(nil), "moc.ProvisionStatus")
	proto.RegisterType((*DownloadStatus)(nil), "moc.DownloadStatus")
	proto.RegisterType((*Health)(nil), "moc.Health")
	proto.RegisterType((*ValidationState)(nil), "moc.ValidationState")
	proto.RegisterType((*ValidationStatus)(nil), "moc.ValidationStatus")
	proto.RegisterType((*Version)(nil), "moc.Version")
	proto.RegisterType((*Status)(nil), "moc.Status")
	proto.RegisterType((*Entity)(nil), "moc.Entity")
	proto.RegisterType((*Tag)(nil), "moc.Tag")
	proto.RegisterType((*Tags)(nil), "moc.Tags")
	proto.RegisterExtension(E_Sensitive)
}

func init() { proto.RegisterFile("moc_common_common.proto", fileDescriptor_681f78e46755eb93) }

var fileDescriptor_681f78e46755eb93 = []byte{
	// 2564 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x58, 0x7d, 0x68, 0x2c, 0x57,
	0x15, 0xcf, 0x7e, 0x26, 0xb9, 0x9b, 0xec, 0xde, 0xdc, 0x7c, 0xed, 0xcb, 0x7b, 0x6d, 0x5f, 0xd3,
	0xf6, 0xf9, 0x08, 0x36, 0x4f, 0x9f, 0xa2, 0xa8, 0xa8, 0x4c, 0x76, 0x27, 0xc9, 0x92, 0xcd, 0xee,
	0x32, 0x3b, 0x49, 0xab, 0x08, 0xcb, 0x64, 0xf6, 0x66, 0x33, 0xbc, 0xd9, 0xb9, 0xcb, 0x9d, 0xbb,
	0xfb, 0xd8, 0xfe, 0x65, 0xc1, 0x8a, 0x82, 0x82, 0x8a, 0x05, 0x85, 0x0a, 0x0a, 0x0a, 0x0a, 0xd6,
	0x0f, 0x50, 0x50, 0xf0, 0xa3, 0x05, 0x0b, 0x7e, 0xb4, 0x60, 0x41, 0xf0, 0xab, 0xd5, 0x16, 0x15,
	0x14, 0x14, 0x14, 0xfc, 0x68, 0xfd, 0x42, 0xce, 0x9d, 0x7b, 0x37, 0xbb, 0x9b, 0x79, 0xfe, 0x93,
	0xcc, 0xfc, 0xce, 0xef, 0x9c, 0x7b, 0xee, 0x39, 0xe7, 0x9e, 0x7b, 0x66, 0xd1, 0x7a, 0x97, 0xb9,
	0x2d, 0x97, 0x75, 0xbb, 0x2c, 0x50, 0xff, 0xb6, 0x7b, 0x9c, 0x09, 0x46, 0x52, 0x5d, 0xe6, 0x6e,
	0x5c, 0xed, 0x30, 0xd6, 0xf1, 0xe9, 0x0d, 0x09, 0x9d, 0xf4, 0x4f, 0x6f, 0xb4, 0x69, 0xe8, 0x72,
	0xaf, 0x27, 0x18, 0x8f, 0x68, 0x9b, 0x47, 0x28, 0x63, 0x72, 0xce, 0x38, 0x29, 0xa2, 0xd9, 0x43,
	0x1a, 0x86, 0x4e, 0x87, 0x16, 0x13, 0x57, 0x13, 0xd7, 0xe7, 0x2d, 0xfd, 0x4a, 0x08, 0x4a, 0x97,
	0x58, 0x9b, 0x16, 0x93, 0x57, 0x13, 0xd7, 0x33, 0x96, 0x7c, 0x26, 0x77, 0x23, 0xd4, 0x70, 0xb8,
	0xd3, 0xa5, 0x82, 0xf2, 0xb0, 0x98, 0x92, 0x0a, 0x63, 0xc8, 0xe6, 0x63, 0x09, 0x54, 0x68, 0x70,
	0x36, 0xf0, 0x42, 0x8f, 0x05, 0x4d, 0xe1, 0x88, 0x7e, 0x48, 0xde, 0x8c, 0x16, 0xdc, 0x3e, 0xe7,
	0x34, 0x10, 0x00, 0x44, 0xcb, 0xe4, 0x6f, 0x2e, 0x6f, 0x77, 0x99, 0xbb, 0x3d, 0xc1, 0xa5, 0xd6,
	0x04, 0x91, 0xbc, 0x05, 0x2d, 0xf6, 0x38, 0x1d, 0x78, 0xac, 0x1f, 0x46, 0x9a, 0xc9, 0x3b, 0x6b,
	0x4e, 0x32, 0x37, 0x9f, 0x48, 0xa0, 0x7c, 0x99, 0xdd, 0x0e, 0x7c, 0xe6, 0xb4, 0x95, 0x1b, 0xdb,
	0x88, 0xf4, 0x38, 0xeb, 0x70, 0x1a, 0x86, 0x0d, 0xca, 0x5d, 0x1a, 0x08, 0xbd, 0xe7, 0x94, 0x15,
	0x23, 0x21, 0xaf, 0x43, 0xcb, 0x6d, 0x6d, 0xc1, 0x7b, 0x84, 0x56, 0x82, 0x9d, 0xa1, 0xa0, 0xa1,
	0xf4, 0x21, 0x65, 0xc5, 0x89, 0xc8, 0x75, 0x54, 0x38, 0xf5, 0x7c, 0x3a, 0xce, 0x4e, 0x49, 0xf6,
	0x34, 0xbc, 0x39, 0x40, 0xd9, 0x7d, 0xea, 0xf8, 0xe2, 0x8c, 0xbc, 0x31, 0x36, 0x38, 0x58, 0x6e,
	0x31, 0xa2, 0xc4, 0x45, 0xe6, 0x4d, 0xf1, 0x91, 0xb9, 0xa8, 0x36, 0x15, 0x96, 0x47, 0x13, 0xa8,
	0x70, 0xec, 0xf8, 0x5e, 0xdb, 0x11, 0x3a, 0x72, 0xe4, 0xb5, 0x28, 0xed, 0x42, 0x9a, 0xa3, 0x95,
	0x8b, 0xd2, 0xc4, 0x14, 0x07, 0x52, 0x6f, 0x49, 0x16, 0x94, 0x4b, 0x57, 0x95, 0x4b, 0x32, 0x2a,
	0x17, 0xf5, 0x4a, 0xae, 0xa1, 0x3c, 0xa7, 0x50, 0x8a, 0x34, 0x88, 0x54, 0x55, 0x79, 0x4c, 0xa1,
	0x9b, 0x16, 0xc2, 0x93, 0xe6, 0xfb, 0x21, 0x79, 0x07, 0x2a, 0x0c, 0x26, 0x97, 0x2c, 0x26, 0xae,
	0xa6, 0xae, 0xe7, 0x6e, 0xae, 0xc4, 0xb9, 0x63, 0x4d, 0x93, 0x37, 0xef, 0x45, 0xb3, 0xc7, 0x94,
	0x43, 0x35, 0x90, 0x35, 0x94, 0x0d, 0xfa, 0xdd, 0x13, 0xca, 0x55, 0x39, 0xab, 0xb7, 0xcd, 0x67,
	0x92, 0x28, 0xab, 0x56, 0xbb, 0x0f, 0x65, 0xcf, 0x64, 0x8c, 0x24, 0x25, 0x77, 0x33, 0x37, 0x16,
	0x36, 0x4b, 0x89, 0x48, 0x59, 0x96, 0x4b, 0x54, 0x62, 0x5e, 0xd0, 0x89, 0x54, 0xe5, 0x9e, 0xb5,
	0x57, 0x53, 0x75, 0x6e, 0xc5, 0xf0, 0xc9, 0x75, 0x34, 0xef, 0x3b, 0xa1, 0x90, 0x47, 0x4d, 0xc6,
	0x23, 0x77, 0x13, 0x49, 0x65, 0x89, 0x58, 0xe7, 0x42, 0x72, 0x0d, 0xcd, 0x0e, 0xa2, 0x2d, 0x14,
	0xd3, 0x92, 0xb7, 0x10, 0x6d, 0x3d, 0xc2, 0x2c, 0x2d, 0x24, 0x6f, 0x43, 0xf9, 0xf6, 0x44, 0x61,
	0x17, 0x33, 0x92, 0x1e, 0x9d, 0x8a, 0xc9, 0x9a, 0xb7, 0xa6, 0xa8, 0xc4, 0x40, 0x78, 0x30, 0x15,
	0xfb, 0x62, 0x56, 0xaa, 0xaf, 0xc6, 0x04, 0xba, 0x1f, 0x5a, 0x17, 0xe8, 0x9b, 0xdb, 0x28, 0x6b,
	0x06, 0xc2, 0x13, 0x43, 0x72, 0x3f, 0x5a, 0xac, 0x84, 0x0d, 0xdf, 0x71, 0xe9, 0x19, 0xf3, 0xdb,
	0x2a, 0xe0, 0x73, 0xd6, 0x24, 0xb8, 0xf9, 0x20, 0x4a, 0xd9, 0x4e, 0x87, 0x60, 0x94, 0xba, 0x45,
	0x87, 0x2a, 0x27, 0xf0, 0x48, 0x56, 0x50, 0x66, 0xe0, 0xf8, 0x7d, 0x5d, 0x47, 0xd1, 0xcb, 0xe6,
	0xfd, 0x28, 0x6d, 0x3b, 0x9d, 0x90, 0x5c, 0x41, 0x69, 0xe1, 0x74, 0x42, 0x55, 0x06, 0x73, 0xd2,
	0x3b, 0xdb, 0xe9, 0x58, 0x12, 0xdd, 0x7a, 0x0f, 0x9a, 0xaf, 0xf7, 0x28, 0x97, 0x7e, 0x91, 0x59,
	0x94, 0xda, 0x33, 0x6d, 0x3c, 0x43, 0xe6, 0x50, 0xba, 0x51, 0x6f, 0xda, 0x38, 0x41, 0x10, 0xca,
	0x96, 0xcd, 0xaa, 0x69, 0x9b, 0x38, 0x09, 0xcf, 0x47, 0x8d, 0xb2, 0x61, 0x9b, 0x38, 0x05, 0xcf,
	0x95, 0xc3, 0x46, 0xdd, 0xb2, 0x71, 0x1a, 0x9e, 0xcd, 0x87, 0xe5, 0x73, 0x86, 0x2c, 0xa0, 0xb9,
	0x63, 0xa3, 0x5a, 0x91, 0xac, 0xec, 0xd6, 0x6f, 0x92, 0x28, 0x3f, 0xd9, 0x5e, 0x48, 0x0e, 0xcd,
	0x1e, 0xd5, 0x0e, 0x6a, 0xf5, 0x87, 0x6a, 0x78, 0x06, 0xd8, 0x25, 0xcb, 0x34, 0xec, 0x4a, 0x6d,
	0x0f, 0x27, 0x40, 0x24, 0xdf, 0xcc, 0x32, 0x4e, 0x92, 0x25, 0xb4, 0x18, 0xbd, 0xb4, 0x76, 0x8d,
	0x4a, 0xd5, 0x2c, 0xe3, 0x14, 0xb0, 0xa5, 0x2f, 0xc0, 0x4e, 0x03, 0x21, 0xf2, 0x4c, 0x13, 0x32,
	0x60, 0x20, 0x82, 0xca, 0x38, 0x0b, 0x6c, 0xe9, 0x2d, 0xb0, 0x67, 0x81, 0x1d, 0xf9, 0xae, 0xd9,
	0x73, 0xd2, 0x13, 0x09, 0x95, 0xf1, 0x3c, 0xc1, 0x68, 0xa1, 0x61, 0xd5, 0x8f, 0x2b, 0xcd, 0x4a,
	0xbd, 0x06, 0x1a, 0x88, 0x14, 0x50, 0x6e, 0x84, 0x98, 0x65, 0x9c, 0x23, 0x2b, 0x08, 0x8f, 0x00,
	0x6d, 0x65, 0x81, 0x10, 0x94, 0x2f, 0x9b, 0x13, 0xaa, 0x8b, 0x91, 0x6b, 0xe3, 0xca, 0x79, 0xb2,
	0x86, 0xc8, 0x18, 0xa4, 0xd5, 0x0b, 0x91, 0xba, 0xdc, 0x45, 0xc3, 0xac, 0x95, 0x41, 0x1d, 0x93,
	0x45, 0x34, 0x1f, 0xc5, 0x16, 0x5e, 0x97, 0x60, 0x23, 0xd1, 0xab, 0x59, 0xc6, 0x04, 0x6c, 0x47,
	0x6f, 0xda, 0xc6, 0xf2, 0xd6, 0x2e, 0x5a, 0xdd, 0xf7, 0x3a, 0x67, 0xc6, 0xc0, 0xf1, 0x7c, 0xe7,
	0xc4, 0xf3, 0x3d, 0x31, 0x8c, 0x62, 0xbd, 0x82, 0xb0, 0x8a, 0x75, 0x6b, 0xdf, 0x68, 0x35, 0x6d,
	0x48, 0xca, 0x0c, 0xa4, 0xab, 0x69, 0x1b, 0x3b, 0x55, 0x33, 0x0a, 0xb9, 0x5e, 0x37, 0xb9, 0xd5,
	0x41, 0xb9, 0xb1, 0x8e, 0x07, 0xeb, 0xd6, 0xea, 0xb6, 0x4e, 0x55, 0x16, 0x25, 0xeb, 0x07, 0x91,
	0xc6, 0x43, 0x86, 0x25, 0x37, 0x9a, 0x8c, 0xf2, 0x57, 0xb1, 0x2b, 0x25, 0xa3, 0x8a, 0x53, 0x20,
	0x3a, 0xac, 0x34, 0x9b, 0x51, 0x7a, 0x64, 0xb2, 0xf6, 0x2c, 0xa3, 0x2c, 0x33, 0x13, 0xd9, 0xda,
	0xad, 0x1f, 0xd5, 0xca, 0x38, 0xbb, 0xf5, 0x78, 0x02, 0x2d, 0xc7, 0x34, 0x46, 0xf0, 0xb7, 0x56,
	0x2f, 0x9b, 0xad, 0xa3, 0x9a, 0x65, 0x1a, 0xa5, 0x7d, 0xe9, 0xe3, 0x0c, 0x84, 0xc8, 0xac, 0xd9,
	0x15, 0xfb, 0x5d, 0x2d, 0x6d, 0x3d, 0x41, 0x2e, 0xa3, 0xf5, 0x52, 0xb5, 0x62, 0xd6, 0xec, 0x56,
	0x54, 0x3f, 0x2a, 0xa4, 0x47, 0x16, 0xd4, 0x29, 0x41, 0xf9, 0xdd, 0xba, 0x75, 0x68, 0xd8, 0xad,
	0x4a, 0x4d, 0x16, 0x23, 0x4e, 0x41, 0x7e, 0x2b, 0xb5, 0xdd, 0x7a, 0xeb, 0xdc, 0x41, 0x08, 0xa4,
	0x42, 0x0e, 0x0d, 0xbb, 0xb4, 0x8f, 0x33, 0x5b, 0x1c, 0xa1, 0x92, 0xef, 0xd1, 0x40, 0xd8, 0xc3,
	0x1e, 0x05, 0x95, 0x52, 0xbd, 0x66, 0x5b, 0xf5, 0x6a, 0xa3, 0x6a, 0xd4, 0xb4, 0x27, 0x0f, 0xdb,
	0xa6, 0x55, 0x33, 0xaa, 0xd1, 0xea, 0x38, 0x01, 0x47, 0x05, 0x7c, 0xc6, 0x49, 0x32, 0x8f, 0x32,
	0x46, 0xf9, 0xb0, 0x52, 0xc3, 0x29, 0xc8, 0xe0, 0x8e, 0x61, 0x99, 0x87, 0xa6, 0x6d, 0x54, 0x71,
	0x1a, 0x2c, 0x55, 0xeb, 0x46, 0x79, 0xc7, 0xa8, 0x1a, 0xb5, 0x92, 0x69, 0xe1, 0x0c, 0x68, 0xed,
	0xc3, 0x01, 0xcb, 0x6e, 0xdd, 0x44, 0xc4, 0xe8, 0x8b, 0x33, 0x1a, 0x08, 0xcf, 0x95, 0xe1, 0x90,
	0x6b, 0xe7, 0x11, 0x6a, 0x9a, 0xd5, 0xdd, 0x66, 0x65, 0x0f, 0xca, 0x27, 0x3a, 0x28, 0x86, 0x7a,
	0x4b, 0x6c, 0xfd, 0x34, 0x83, 0x16, 0xe4, 0xb1, 0x6a, 0x53, 0x2e, 0xe9, 0x05, 0x94, 0x33, 0x82,
	0xa1, 0x86, 0x22, 0x4f, 0x8f, 0x3d, 0x2e, 0xfa, 0x8e, 0x7f, 0xe8, 0xb8, 0x67, 0x5e, 0x40, 0x71,
	0x82, 0x6c, 0xa0, 0xb5, 0x49, 0xac, 0xe9, 0x3a, 0x3e, 0x6d, 0x52, 0x81, 0x93, 0xd2, 0x43, 0xe6,
	0xb4, 0x77, 0x1c, 0xdf, 0x09, 0x5c, 0xca, 0x71, 0x6a, 0xcc, 0x42, 0x8d, 0x8a, 0xdb, 0x8c, 0xdf,
	0xc2, 0x69, 0xb2, 0x8c, 0x0a, 0x0a, 0xdb, 0x77, 0x78, 0xbb, 0xec, 0x85, 0xb7, 0x70, 0x06, 0x54,
	0xf7, 0x1c, 0xdf, 0xa7, 0x7c, 0x58, 0xe9, 0x3a, 0x1d, 0x8a, 0xb3, 0x64, 0x1d, 0x2d, 0x4f, 0x2e,
	0x14, 0x09, 0x66, 0x65, 0x7e, 0x23, 0x63, 0x95, 0x40, 0x50, 0x7e, 0xea, 0xb8, 0x14, 0xcf, 0x81,
	0xf3, 0x25, 0xca, 0x85, 0x77, 0x0a, 0x01, 0xa0, 0x78, 0x1e, 0xda, 0xd0, 0x01, 0x1d, 0x62, 0x24,
	0x2b, 0x95, 0xba, 0x9c, 0x0a, 0x9c, 0x83, 0x08, 0x1c, 0xd0, 0xe1, 0xb1, 0xd3, 0xf7, 0x05, 0x5e,
	0x90, 0x67, 0xa2, 0x4d, 0x65, 0xf7, 0xc4, 0x8b, 0x10, 0x4d, 0x8b, 0xf9, 0x14, 0xe7, 0xc1, 0x6b,
	0x78, 0x32, 0xc2, 0xd0, 0xeb, 0x04, 0x5d, 0x1a, 0x08, 0x5c, 0x80, 0x58, 0x1e, 0xf4, 0x4f, 0x28,
	0x0f, 0xa8, 0xa0, 0x21, 0xc6, 0xb2, 0xcd, 0xf8, 0xfd, 0x50, 0x50, 0x8e, 0x97, 0x64, 0x92, 0x59,
	0x20, 0x38, 0xf3, 0x1b, 0xbe, 0x13, 0x50, 0x4c, 0x20, 0x8d, 0x7b, 0x9c, 0xf5, 0x7b, 0x78, 0x59,
	0xe6, 0x96, 0xb5, 0x29, 0x5e, 0x81, 0xf5, 0xaa, 0x2c, 0xca, 0x0f, 0x5e, 0x85, 0x7d, 0x34, 0x05,
	0xe3, 0x4e, 0x87, 0x82, 0xae, 0xe3, 0x05, 0x94, 0xe3, 0x35, 0xd8, 0x87, 0x42, 0x77, 0x3d, 0x9f,
	0xe2, 0xf5, 0x31, 0x5a, 0xd9, 0xe3, 0xd4, 0x15, 0x8c, 0x0f, 0x71, 0x11, 0x56, 0x6c, 0xf6, 0x4f,
	0xa2, 0x21, 0x12, 0xcc, 0x5d, 0x02, 0x87, 0x8e, 0xbd, 0x5e, 0x83, 0x31, 0x1f, 0x6f, 0xc8, 0x43,
	0xe4, 0xb8, 0xf2, 0xe5, 0x32, 0x98, 0x34, 0x85, 0xdb, 0xd6, 0xee, 0x5e, 0x81, 0xbd, 0x00, 0xd0,
	0xa4, 0x7c, 0x40, 0x39, 0xbe, 0x0b, 0x96, 0xd8, 0x71, 0x38, 0x3d, 0xa4, 0xe2, 0x3c, 0xd3, 0x77,
	0x93, 0x55, 0xb4, 0x54, 0xe2, 0x54, 0xc6, 0xc7, 0xf1, 0x0f, 0x59, 0xe0, 0x09, 0xc6, 0xf1, 0x3d,
	0x60, 0xba, 0xca, 0x3a, 0x1d, 0x2f, 0xe8, 0xe0, 0xab, 0xb0, 0x23, 0x8b, 0xba, 0x6c, 0x40, 0xf9,
	0x10, 0xdf, 0x0b, 0x9b, 0x2e, 0xd3, 0x93, 0x7e, 0x07, 0x6f, 0xc2, 0xb9, 0x18, 0x99, 0xdc, 0x67,
	0xa1, 0xc0, 0xf7, 0x41, 0x54, 0x27, 0x6b, 0x14, 0xdf, 0x0f, 0xb4, 0xa8, 0x59, 0x68, 0xfb, 0x0f,
	0x00, 0xad, 0xca, 0x3a, 0x9e, 0x7b, 0x5e, 0x32, 0xd7, 0xa0, 0x64, 0x26, 0xfa, 0x12, 0x15, 0xf8,
	0x35, 0xa4, 0x88, 0x56, 0x14, 0xa3, 0x49, 0xdd, 0x3e, 0xf7, 0xc4, 0x30, 0x8a, 0xf8, 0xf5, 0xad,
	0xff, 0x12, 0xb4, 0xae, 0xcb, 0xd8, 0x70, 0x5d, 0x1a, 0x86, 0xe7, 0xb7, 0x53, 0x01, 0xe5, 0x8e,
	0x82, 0xb0, 0x47, 0x5d, 0xef, 0xd4, 0xa3, 0x6d, 0x3c, 0x03, 0x66, 0x26, 0xdd, 0x6a, 0xc1, 0xf2,
	0x01, 0x6e, 0x93, 0x75, 0x44, 0xc6, 0x4a, 0xaa, 0x55, 0xe2, 0x14, 0x2a, 0xeb, 0xfb, 0x89, 0x69,
	0xc1, 0x51, 0xaf, 0x0d, 0x82, 0x1f, 0x24, 0xc8, 0x0a, 0x2a, 0x8c, 0x0b, 0xf6, 0xa8, 0xc0, 0x3f,
	0xbc, 0x40, 0x2f, 0x53, 0x9f, 0x0a, 0x8a, 0x7f, 0x94, 0x20, 0xab, 0x08, 0x8f, 0x0b, 0x9a, 0x5e,
	0x27, 0xc0, 0xcf, 0x26, 0xc8, 0x1a, 0x5a, 0x1a, 0x87, 0x2d, 0x1a, 0xd0, 0xdb, 0xf8, 0x39, 0x69,
	0x5d, 0x97, 0xab, 0x76, 0xe6, 0x8b, 0xc9, 0x09, 0x54, 0x79, 0xf2, 0xe4, 0x24, 0x6a, 0xd1, 0x01,
	0xbb, 0x45, 0xf1, 0x97, 0xa6, 0x50, 0x06, 0x1d, 0x13, 0x7f, 0x39, 0x49, 0xee, 0x41, 0x1b, 0x1a,
	0x8d, 0xd9, 0xef, 0x47, 0x52, 0x77, 0x22, 0xa8, 0xd5, 0x3e, 0x9a, 0x22, 0x77, 0xa3, 0x4b, 0x71,
	0x84, 0xc8, 0xf3, 0x8f, 0xa5, 0x48, 0x01, 0xa1, 0x03, 0x3a, 0x72, 0xfa, 0xaf, 0x23, 0x40, 0x59,
	0xf8, 0x1b, 0x74, 0xd6, 0x1c, 0x00, 0x66, 0xe0, 0xf2, 0x61, 0x4f, 0xe0, 0xbf, 0x8f, 0x90, 0x32,
	0x8d, 0x90, 0x7f, 0x8c, 0x90, 0x87, 0xb8, 0xd3, 0x83, 0x93, 0xfd, 0x0a, 0xb4, 0x97, 0x45, 0x69,
	0x26, 0xb8, 0xad, 0xb0, 0x57, 0xa1, 0x6b, 0xc2, 0x11, 0x8f, 0x82, 0xf9, 0xcf, 0xd1, 0x4a, 0xc7,
	0x94, 0x7b, 0xa7, 0x43, 0xfc, 0xaf, 0x14, 0xd9, 0x40, 0xab, 0x93, 0x7d, 0x45, 0xbb, 0xf5, 0xb3,
	0x74, 0x8c, 0x4c, 0x79, 0xf8, 0xf3, 0x38, 0x99, 0x4a, 0xe4, 0x2f, 0xd2, 0xe4, 0x0a, 0x5a, 0x9f,
	0x92, 0xa9, 0x8b, 0x89, 0xe2, 0x5f, 0xa6, 0xc9, 0x25, 0xb4, 0x32, 0x25, 0x6d, 0x0a, 0x87, 0x0b,
	0xfc, 0x42, 0x9a, 0x14, 0xa7, 0x9b, 0x5c, 0xab, 0x29, 0x58, 0x0f, 0xbf, 0x18, 0xa7, 0x64, 0xd1,
	0x90, 0x0a, 0xfc, 0xab, 0x34, 0xb9, 0x86, 0xee, 0xbd, 0x20, 0xea, 0x39, 0x1e, 0x6f, 0xed, 0xf5,
	0x69, 0x28, 0x5a, 0x46, 0x07, 0x3a, 0xd6, 0xaf, 0xe3, 0x4c, 0x34, 0x9c, 0x7e, 0x48, 0xf1, 0x4b,
	0xb1, 0xeb, 0x3a, 0x03, 0x8a, 0x5f, 0x86, 0xee, 0x9c, 0x57, 0x8d, 0x42, 0xc7, 0xe5, 0x5b, 0x99,
	0x71, 0x50, 0x05, 0xe4, 0xdb, 0x19, 0xb0, 0xa1, 0x41, 0xe8, 0xfa, 0xba, 0xbd, 0x7c, 0x27, 0x03,
	0xa1, 0x1a, 0xd1, 0xe5, 0xb8, 0xab, 0x65, 0xdf, 0xcd, 0xc8, 0xc3, 0xa0, 0x64, 0x7b, 0x54, 0x68,
	0xc1, 0x53, 0x19, 0x79, 0x18, 0xce, 0x05, 0xd0, 0x31, 0x43, 0xfc, 0x74, 0x06, 0x0e, 0x83, 0xec,
	0x29, 0x2d, 0xf9, 0x57, 0xb5, 0xac, 0x4f, 0x67, 0x81, 0x1e, 0xe1, 0x4d, 0xe1, 0xb8, 0xb7, 0x6c,
	0x0e, 0xb7, 0xc0, 0x67, 0xb2, 0xb0, 0x67, 0xe8, 0x3b, 0x5d, 0xdd, 0x77, 0xf4, 0x26, 0xde, 0x37,
	0x7b, 0x51, 0xa4, 0xb6, 0xf2, 0xd8, 0x2c, 0xe4, 0x6f, 0x24, 0x9a, 0xaa, 0x8a, 0xdf, 0xc7, 0x4b,
	0x95, 0xee, 0x1f, 0x66, 0x65, 0x18, 0xc6, 0x7a, 0xbf, 0xd6, 0x7b, 0x76, 0xee, 0x82, 0x44, 0xe9,
	0x3c, 0x37, 0x07, 0x41, 0x18, 0xeb, 0xc8, 0x5a, 0xe5, 0x2b, 0xf3, 0xd3, 0x02, 0xa5, 0xf1, 0xd5,
	0x79, 0x08, 0xc3, 0x79, 0xcb, 0xd6, 0x0a, 0x1f, 0x47, 0x53, 0xb8, 0xe2, 0x3f, 0x8e, 0x60, 0xed,
	0xf1, 0xfb, 0x54, 0x6b, 0xbc, 0x72, 0x51, 0xa2, 0x74, 0x5e, 0x45, 0x64, 0x09, 0x2d, 0xc8, 0x0e,
	0xaa, 0xc9, 0x2f, 0xe4, 0xce, 0x21, 0xc5, 0x7a, 0x11, 0x06, 0xd8, 0x82, 0xbe, 0x42, 0x35, 0xf1,
	0xa9, 0x85, 0x09, 0x54, 0x71, 0x9f, 0x5e, 0x00, 0xef, 0xce, 0x2f, 0x4d, 0xcd, 0xfe, 0xec, 0xe2,
	0x14, 0xae, 0xf8, 0x9f, 0x5b, 0x04, 0xdf, 0xc6, 0x07, 0x08, 0xad, 0xf1, 0x81, 0xfc, 0x05, 0x89,
	0xd2, 0xf9, 0x60, 0x1e, 0x56, 0xd6, 0x97, 0xaa, 0xe6, 0xff, 0x71, 0x12, 0x55, 0xdc, 0x3f, 0xe5,
	0xa1, 0x8e, 0x0f, 0x1d, 0xb7, 0xc7, 0x98, 0xaf, 0xa9, 0x3f, 0x2e, 0x8c, 0x83, 0x8a, 0xf9, 0x7c,
	0x01, 0x72, 0x3e, 0x3d, 0x64, 0x68, 0x95, 0xaf, 0xe1, 0x58, 0xa9, 0xd2, 0xfd, 0x3a, 0x86, 0x3e,
	0x05, 0xe5, 0xab, 0xf9, 0x9f, 0x58, 0x1a, 0x21, 0x8a, 0xf3, 0xc9, 0x25, 0xf0, 0x4f, 0x5f, 0x9c,
	0x9a, 0xf7, 0xef, 0x49, 0x54, 0x71, 0xff, 0x23, 0xb5, 0x61, 0x1c, 0xd1, 0xbc, 0x97, 0xc8, 0x08,
	0x51, 0x9c, 0x97, 0x09, 0x1c, 0xb9, 0xc9, 0x91, 0x45, 0xb3, 0xbf, 0xb7, 0x1c, 0x23, 0x53, 0x7a,
	0xcf, 0x2c, 0x43, 0x07, 0x8d, 0x86, 0x23, 0xcd, 0xff, 0xfc, 0xca, 0x18, 0xa6, 0x78, 0x5f, 0x58,
	0x81, 0x1d, 0x4f, 0x0f, 0x2b, 0x5a, 0xe3, 0x43, 0xab, 0xb1, 0x52, 0xa5, 0xfb, 0xe1, 0x55, 0xc8,
	0xdd, 0xf8, 0xac, 0xa2, 0xf5, 0xfe, 0x7c, 0x51, 0xa2, 0x74, 0xfe, 0x22, 0x25, 0xe7, 0xb3, 0xfd,
	0x79, 0x37, 0xfd, 0xc9, 0x1a, 0xa4, 0x4b, 0xcd, 0x39, 0xda, 0xd0, 0x37, 0xd6, 0xc7, 0x41, 0x65,
	0xe3, 0x9b, 0xeb, 0xe4, 0xf2, 0x68, 0x54, 0xd5, 0x83, 0xa6, 0xd6, 0x78, 0xa2, 0x18, 0x27, 0x54,
	0x9a, 0x9f, 0x2a, 0xc2, 0x85, 0x17, 0x33, 0x7b, 0x6a, 0xed, 0xf7, 0x5e, 0xba, 0x13, 0x41, 0x59,
	0x78, 0xf4, 0x12, 0xd9, 0x44, 0x77, 0xc5, 0x8f, 0xc9, 0xda, 0xc8, 0x6f, 0xff, 0x1f, 0x47, 0xd9,
	0xf9, 0xdd, 0xa5, 0xb1, 0x5b, 0x47, 0x15, 0xdc, 0x68, 0x0c, 0xd9, 0x88, 0x91, 0xe9, 0x49, 0x64,
	0x03, 0xb6, 0x37, 0x35, 0x31, 0x8d, 0x46, 0x86, 0xcb, 0x71, 0x42, 0x75, 0x97, 0x3d, 0x79, 0x99,
	0x5c, 0x45, 0x97, 0xe3, 0xc6, 0xaa, 0xd1, 0x38, 0x70, 0xe5, 0x8e, 0x0c, 0x3d, 0x0f, 0x5c, 0x81,
	0x6f, 0x40, 0x19, 0x90, 0x26, 0xeb, 0x73, 0x97, 0x46, 0x5f, 0x2e, 0x25, 0xa3, 0xda, 0x6a, 0xd6,
	0x8f, 0xac, 0x12, 0x7c, 0x03, 0xc1, 0x97, 0xc9, 0x6e, 0x53, 0xbf, 0x27, 0x60, 0x2a, 0xdb, 0xb7,
	0xed, 0x86, 0x06, 0xe4, 0xa7, 0x44, 0xa9, 0x5a, 0xaf, 0x99, 0x1a, 0x49, 0xc9, 0xcf, 0x86, 0xc3,
	0x7a, 0xb3, 0x5c, 0x69, 0x1e, 0x68, 0x30, 0xbd, 0xb5, 0x83, 0xf0, 0xfe, 0xb0, 0x47, 0xf9, 0xf1,
	0x1e, 0x0d, 0xf4, 0x84, 0xb7, 0x86, 0xc8, 0x34, 0x76, 0x7c, 0x13, 0xcf, 0xc4, 0xe2, 0xaf, 0xc7,
	0x89, 0xad, 0x77, 0xa2, 0x3c, 0xa4, 0x1f, 0xc6, 0xed, 0x5d, 0xc6, 0xbb, 0x8e, 0x90, 0x9f, 0xd9,
	0x13, 0xc8, 0xf1, 0x7e, 0xf9, 0x61, 0x3c, 0x03, 0x13, 0xf1, 0x05, 0x1c, 0x27, 0xb6, 0x1e, 0x84,
	0x8b, 0x90, 0xf5, 0xdb, 0x95, 0xc0, 0x13, 0x65, 0x47, 0x38, 0x6a, 0xd7, 0x39, 0x34, 0x5b, 0x63,
	0x52, 0x80, 0x67, 0xe4, 0x67, 0xdd, 0x23, 0x7d, 0x4e, 0x71, 0xe2, 0xad, 0x6f, 0x47, 0xf3, 0x21,
	0x0d, 0x42, 0x4f, 0x78, 0x03, 0x4a, 0xee, 0xda, 0x8e, 0x7e, 0x1a, 0xde, 0xd6, 0x3f, 0x0d, 0x6f,
	0xef, 0x7a, 0xd4, 0x6f, 0xd7, 0xe5, 0x79, 0x08, 0x8b, 0xcf, 0xbf, 0x3f, 0x25, 0x7f, 0xc4, 0x39,
	0xd7, 0xd8, 0x79, 0xe0, 0xdd, 0xf7, 0x75, 0x3c, 0x71, 0xd6, 0x3f, 0xd9, 0x76, 0x59, 0xf7, 0x46,
	0xd7, 0x73, 0x39, 0x0b, 0xd9, 0xa9, 0xb8, 0xd1, 0x65, 0xee, 0x0d, 0xde, 0x73, 0x6f, 0x44, 0xbf,
	0x3e, 0x9f, 0x64, 0xa5, 0xc1, 0x37, 0xfc, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x20, 0x76, 0x7e, 0x73,
	0x99, 0x16, 0x00, 0x00,
}
