// Copyright (c) Microsoft Corporation.
// Licensed under the Apache v2.0 license.

syntax = "proto3";
option go_package = "github.com/microsoft/moc/rpc/cloudagent/security";
package moc.cloudagent.security;

import "google/protobuf/wrappers.proto";
import "moc_cloudagent_certificate.proto";
import "moc_common_common.proto";
import "moc_common_security.proto";

message IdentityRequest {
	repeated Identity Identitys = 1;
	Operation OperationType = 2;
}

message IdentityResponse {
	repeated Identity Identitys = 1;
	google.protobuf.BoolValue Result = 2;
	string  Error = 3;
}

message IdentityOperationRequest {
	repeated Identity Identities = 1;
	IdentityOperation OperationType = 2;
}

message IdentityCertificateRequest {
	string IdentityName = 1;
	repeated CertificateSigningRequest CSR = 2;
	IdentityCertificateOperation OperationType = 3;
}

message IdentityCertificateResponse {
	repeated Certificate Certificates = 1;
	google.protobuf.BoolValue Result = 2;
	string  Error = 3;
}

message Identity {
	string name = 1;
	string id = 2;
	string resourceGroup = 3;
	string password = 4 [(sensitive) = true];
	string token = 5 [(sensitive) = true];
	Status status = 7;
	string locationName = 10;
	Tags tags = 11;
	map<string, string> certificates = 12 [(sensitive) = true];
	int64 tokenExpiry = 13 [deprecated = true];
	ClientType clientType = 14;
	string cloudFqdn = 15;
	int32 cloudPort = 16;
	int32 cloudAuthPort = 17;
	AuthenticationType authType = 18;
	bool revoked = 19;
	bool autoRotate = 20;
	string loginFilePath = 21;
	int64 tokenExpiryInSeconds = 22;
}

service IdentityAgent {
	rpc Invoke(IdentityRequest) returns (IdentityResponse) {}
	rpc Operate(IdentityOperationRequest) returns (IdentityResponse) {}
	rpc OperateCertificates(IdentityCertificateRequest) returns (IdentityCertificateResponse) {}
}
