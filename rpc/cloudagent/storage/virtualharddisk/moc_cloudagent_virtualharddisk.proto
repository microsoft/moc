// Copyright (c) Microsoft Corporation.
// Licensed under the Apache v2.0 license.

syntax = "proto3";
option go_package = "github.com/microsoft/moc/rpc/cloudagent/storage";
package moc.cloudagent.storage;

import "google/protobuf/wrappers.proto";
import "moc_common_common.proto";



message VirtualHardDiskRequest {
	repeated VirtualHardDisk VirtualHardDisks = 1;
	Operation OperationType = 2;
}

message VirtualHardDiskResponse {
	repeated VirtualHardDisk VirtualHardDisks = 1;
	google.protobuf.BoolValue Result = 2;
	string  Error = 3;
}

message VirtualHardDisk {
	string name = 1;
	string id = 2;
	string containerName = 3;
	string path = 4 [(sensitive) = true];
	Status status = 5;
	int64 size = 6;
	bool dynamic = 7;
	int32 blocksizebytes = 8;
	int32 logicalsectorbytes = 9;
	int32 physicalsectorbytes = 10;
	int64 controllernumber  = 11;
	int64 controllerlocation = 12;
	int64 disknumber = 13;
	string virtualmachineName = 14;
	string scsipath = 15;
	string attachedVirtualmachineName = 16;
	string attachedNodeName = 17;
	string groupName = 18;
	string locationName = 19;
	HyperVGeneration hyperVGeneration = 20;
	DiskFileFormat diskFileFormat = 21;
	CloudInitDataSource cloudInitDataSource = 22;
	Tags tags = 23;
	string sourcePath = 24;
	ImageSource sourceType = 25;
}

message VirtualHardDiskPrecheckRequest {
	repeated VirtualHardDisk VirtualHardDisks = 1;
}

message VirtualHardDiskPrecheckResponse {
	// The precheck result: true if the precheck criteria is passed; otherwise, false
	google.protobuf.BoolValue Result = 1;

	// The error message if the precheck is not passed; otherwise, empty string
	string  Error = 2;
}

service VirtualHardDiskAgent {
	rpc Invoke(VirtualHardDiskRequest) returns (VirtualHardDiskResponse) {}

	// Prechecks whether the system is able to create specified virtual hard disks (but does not actually create them).
	rpc Precheck(VirtualHardDiskPrecheckRequest) returns (VirtualHardDiskPrecheckResponse) {}
}
