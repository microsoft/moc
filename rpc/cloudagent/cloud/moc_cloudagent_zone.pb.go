// Code generated by protoc-gen-go. DO NOT EDIT.
// source: moc_cloudagent_zone.proto

package cloud

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	common "github.com/microsoft/moc/rpc/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ZoneRequest struct {
	Zones                []*Zone          `protobuf:"bytes,1,rep,name=Zones,proto3" json:"Zones,omitempty"`
	OperationType        common.Operation `protobuf:"varint,2,opt,name=OperationType,proto3,enum=moc.Operation" json:"OperationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ZoneRequest) Reset()         { *m = ZoneRequest{} }
func (m *ZoneRequest) String() string { return proto.CompactTextString(m) }
func (*ZoneRequest) ProtoMessage()    {}
func (*ZoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_04d87860cb8ba762, []int{0}
}

func (m *ZoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZoneRequest.Unmarshal(m, b)
}
func (m *ZoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZoneRequest.Marshal(b, m, deterministic)
}
func (m *ZoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZoneRequest.Merge(m, src)
}
func (m *ZoneRequest) XXX_Size() int {
	return xxx_messageInfo_ZoneRequest.Size(m)
}
func (m *ZoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ZoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ZoneRequest proto.InternalMessageInfo

func (m *ZoneRequest) GetZones() []*Zone {
	if m != nil {
		return m.Zones
	}
	return nil
}

func (m *ZoneRequest) GetOperationType() common.Operation {
	if m != nil {
		return m.OperationType
	}
	return common.Operation_GET
}

type ZoneResponse struct {
	Zones                []*Zone             `protobuf:"bytes,1,rep,name=Zones,proto3" json:"Zones,omitempty"`
	Result               *wrappers.BoolValue `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
	Error                string              `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ZoneResponse) Reset()         { *m = ZoneResponse{} }
func (m *ZoneResponse) String() string { return proto.CompactTextString(m) }
func (*ZoneResponse) ProtoMessage()    {}
func (*ZoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_04d87860cb8ba762, []int{1}
}

func (m *ZoneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZoneResponse.Unmarshal(m, b)
}
func (m *ZoneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZoneResponse.Marshal(b, m, deterministic)
}
func (m *ZoneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZoneResponse.Merge(m, src)
}
func (m *ZoneResponse) XXX_Size() int {
	return xxx_messageInfo_ZoneResponse.Size(m)
}
func (m *ZoneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ZoneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ZoneResponse proto.InternalMessageInfo

func (m *ZoneResponse) GetZones() []*Zone {
	if m != nil {
		return m.Zones
	}
	return nil
}

func (m *ZoneResponse) GetResult() *wrappers.BoolValue {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ZoneResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ZonePrecheckRequest struct {
	Zones                []*Zone  `protobuf:"bytes,1,rep,name=Zones,proto3" json:"Zones,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZonePrecheckRequest) Reset()         { *m = ZonePrecheckRequest{} }
func (m *ZonePrecheckRequest) String() string { return proto.CompactTextString(m) }
func (*ZonePrecheckRequest) ProtoMessage()    {}
func (*ZonePrecheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_04d87860cb8ba762, []int{2}
}

func (m *ZonePrecheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZonePrecheckRequest.Unmarshal(m, b)
}
func (m *ZonePrecheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZonePrecheckRequest.Marshal(b, m, deterministic)
}
func (m *ZonePrecheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZonePrecheckRequest.Merge(m, src)
}
func (m *ZonePrecheckRequest) XXX_Size() int {
	return xxx_messageInfo_ZonePrecheckRequest.Size(m)
}
func (m *ZonePrecheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ZonePrecheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ZonePrecheckRequest proto.InternalMessageInfo

func (m *ZonePrecheckRequest) GetZones() []*Zone {
	if m != nil {
		return m.Zones
	}
	return nil
}

type ZonePrecheckResponse struct {
	// The precheck result: true if the precheck criteria is passed; otherwise, false
	Result *wrappers.BoolValue `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	// The error message if the precheck is not passed; otherwise, empty string
	Error                string   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZonePrecheckResponse) Reset()         { *m = ZonePrecheckResponse{} }
func (m *ZonePrecheckResponse) String() string { return proto.CompactTextString(m) }
func (*ZonePrecheckResponse) ProtoMessage()    {}
func (*ZonePrecheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_04d87860cb8ba762, []int{3}
}

func (m *ZonePrecheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZonePrecheckResponse.Unmarshal(m, b)
}
func (m *ZonePrecheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZonePrecheckResponse.Marshal(b, m, deterministic)
}
func (m *ZonePrecheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZonePrecheckResponse.Merge(m, src)
}
func (m *ZonePrecheckResponse) XXX_Size() int {
	return xxx_messageInfo_ZonePrecheckResponse.Size(m)
}
func (m *ZonePrecheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ZonePrecheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ZonePrecheckResponse proto.InternalMessageInfo

func (m *ZonePrecheckResponse) GetResult() *wrappers.BoolValue {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ZonePrecheckResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Zone struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string         `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	LocationName         string         `protobuf:"bytes,3,opt,name=locationName,proto3" json:"locationName,omitempty"`
	Nodes                []string       `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Status               *common.Status `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Zone) Reset()         { *m = Zone{} }
func (m *Zone) String() string { return proto.CompactTextString(m) }
func (*Zone) ProtoMessage()    {}
func (*Zone) Descriptor() ([]byte, []int) {
	return fileDescriptor_04d87860cb8ba762, []int{4}
}

func (m *Zone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Zone.Unmarshal(m, b)
}
func (m *Zone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Zone.Marshal(b, m, deterministic)
}
func (m *Zone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Zone.Merge(m, src)
}
func (m *Zone) XXX_Size() int {
	return xxx_messageInfo_Zone.Size(m)
}
func (m *Zone) XXX_DiscardUnknown() {
	xxx_messageInfo_Zone.DiscardUnknown(m)
}

var xxx_messageInfo_Zone proto.InternalMessageInfo

func (m *Zone) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Zone) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Zone) GetLocationName() string {
	if m != nil {
		return m.LocationName
	}
	return ""
}

func (m *Zone) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Zone) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*ZoneRequest)(nil), "moc.cloudagent.zone.ZoneRequest")
	proto.RegisterType((*ZoneResponse)(nil), "moc.cloudagent.zone.ZoneResponse")
	proto.RegisterType((*ZonePrecheckRequest)(nil), "moc.cloudagent.zone.ZonePrecheckRequest")
	proto.RegisterType((*ZonePrecheckResponse)(nil), "moc.cloudagent.zone.ZonePrecheckResponse")
	proto.RegisterType((*Zone)(nil), "moc.cloudagent.zone.Zone")
}

func init() { proto.RegisterFile("moc_cloudagent_zone.proto", fileDescriptor_04d87860cb8ba762) }

var fileDescriptor_04d87860cb8ba762 = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x51, 0xc1, 0x6e, 0xd4, 0x30,
	0x10, 0x25, 0xbb, 0xdd, 0x88, 0x9d, 0x2d, 0x7b, 0x70, 0x2b, 0x91, 0xe6, 0x80, 0x42, 0xb8, 0x2c,
	0x07, 0x1c, 0x29, 0xf0, 0x03, 0x54, 0x02, 0x89, 0x0b, 0x45, 0x01, 0x71, 0xe8, 0xa5, 0x64, 0xbd,
	0xd3, 0x6d, 0xd4, 0xd8, 0x13, 0x6c, 0x07, 0x04, 0x7f, 0xd0, 0xaf, 0xe2, 0xd7, 0x90, 0xed, 0x2c,
	0xcb, 0x22, 0x8a, 0xd8, 0x9e, 0xec, 0xf1, 0xbc, 0x79, 0xef, 0xcd, 0x33, 0x9c, 0x48, 0x12, 0x17,
	0xa2, 0xa5, 0x7e, 0x55, 0xaf, 0x51, 0xd9, 0x8b, 0xef, 0xa4, 0x90, 0x77, 0x9a, 0x2c, 0xb1, 0x23,
	0x49, 0x82, 0x6f, 0x5b, 0xdc, 0xb5, 0xd2, 0x47, 0x6b, 0xa2, 0x75, 0x8b, 0x85, 0x87, 0x2c, 0xfb,
	0xcb, 0xe2, 0xab, 0xae, 0xbb, 0x0e, 0xb5, 0x09, 0x43, 0xe9, 0x43, 0xcf, 0x47, 0x52, 0x92, 0x1a,
	0x8e, 0xd0, 0xc8, 0x2d, 0xcc, 0xce, 0x49, 0x61, 0x85, 0x9f, 0x7b, 0x34, 0x96, 0x15, 0x30, 0x71,
	0xa5, 0x49, 0xa2, 0x6c, 0xbc, 0x98, 0x95, 0x27, 0xfc, 0x2f, 0x62, 0xdc, 0x0f, 0x04, 0x1c, 0x7b,
	0x01, 0x0f, 0xce, 0x3a, 0xd4, 0xb5, 0x6d, 0x48, 0x7d, 0xf8, 0xd6, 0x61, 0x32, 0xca, 0xa2, 0xc5,
	0xbc, 0x9c, 0xfb, 0xc1, 0x5f, 0x9d, 0x6a, 0x17, 0x94, 0xdf, 0x44, 0x70, 0x18, 0x64, 0x4d, 0x47,
	0xca, 0xe0, 0xfe, 0xba, 0x25, 0xc4, 0x15, 0x9a, 0xbe, 0xb5, 0x5e, 0x70, 0x56, 0xa6, 0x3c, 0x24,
	0xc0, 0x37, 0x09, 0xf0, 0x53, 0xa2, 0xf6, 0x63, 0xdd, 0xf6, 0x58, 0x0d, 0x48, 0x76, 0x0c, 0x93,
	0x57, 0x5a, 0x93, 0x4e, 0xc6, 0x59, 0xb4, 0x98, 0x56, 0xa1, 0xc8, 0x5f, 0xc3, 0x91, 0xa3, 0x7c,
	0xa7, 0x51, 0x5c, 0xa1, 0xb8, 0xbe, 0x6b, 0x12, 0xf9, 0x27, 0x38, 0xde, 0xe5, 0x19, 0x56, 0xdb,
	0x3a, 0x8d, 0xf6, 0x77, 0x3a, 0xfa, 0xdd, 0xe9, 0x4d, 0x04, 0x07, 0x4e, 0x82, 0x31, 0x38, 0x50,
	0xb5, 0x44, 0x4f, 0x38, 0xad, 0xfc, 0x9d, 0xcd, 0x61, 0xd4, 0xac, 0x06, 0xfc, 0xa8, 0x59, 0xb1,
	0x1c, 0x0e, 0x5b, 0x12, 0x3e, 0xf2, 0xb7, 0x0e, 0x1b, 0x76, 0xde, 0x79, 0x73, 0x32, 0x8a, 0x56,
	0x68, 0x92, 0x49, 0x36, 0x76, 0x32, 0xbe, 0x60, 0x4f, 0x20, 0x36, 0xb6, 0xb6, 0xbd, 0x49, 0x62,
	0x6f, 0x78, 0xe6, 0x57, 0x7f, 0xef, 0x9f, 0xaa, 0xa1, 0x55, 0xfe, 0x88, 0x60, 0xea, 0xbc, 0xbc,
	0x74, 0x61, 0xb0, 0x33, 0x88, 0xdf, 0xa8, 0x2f, 0x74, 0x8d, 0x2c, 0xbb, 0x3d, 0xa7, 0x10, 0x6c,
	0xfa, 0xf8, 0x1f, 0x88, 0x10, 0x59, 0x7e, 0x8f, 0xd5, 0x70, 0x7f, 0x13, 0x24, 0x5b, 0xdc, 0x3a,
	0xf0, 0xc7, 0x9f, 0xa5, 0x4f, 0xff, 0x03, 0xb9, 0x91, 0x38, 0x2d, 0xce, 0x9f, 0xad, 0x1b, 0x7b,
	0xd5, 0x2f, 0xb9, 0x20, 0x59, 0xc8, 0x46, 0x68, 0x32, 0x74, 0x69, 0x0b, 0x49, 0xa2, 0xd0, 0x9d,
	0x28, 0xb6, 0x34, 0xe1, 0xba, 0x8c, 0xfd, 0x87, 0x3d, 0xff, 0x19, 0x00, 0x00, 0xff, 0xff, 0x08,
	0x48, 0x5f, 0x80, 0x9c, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ZoneAgentClient is the client API for ZoneAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZoneAgentClient interface {
	Invoke(ctx context.Context, in *ZoneRequest, opts ...grpc.CallOption) (*ZoneResponse, error)
	// Prechecks whether the system is able to create specified zone (but does not actually create them).
	Precheck(ctx context.Context, in *ZonePrecheckRequest, opts ...grpc.CallOption) (*ZonePrecheckResponse, error)
}

type zoneAgentClient struct {
	cc *grpc.ClientConn
}

func NewZoneAgentClient(cc *grpc.ClientConn) ZoneAgentClient {
	return &zoneAgentClient{cc}
}

func (c *zoneAgentClient) Invoke(ctx context.Context, in *ZoneRequest, opts ...grpc.CallOption) (*ZoneResponse, error) {
	out := new(ZoneResponse)
	err := c.cc.Invoke(ctx, "/moc.cloudagent.zone.ZoneAgent/Invoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneAgentClient) Precheck(ctx context.Context, in *ZonePrecheckRequest, opts ...grpc.CallOption) (*ZonePrecheckResponse, error) {
	out := new(ZonePrecheckResponse)
	err := c.cc.Invoke(ctx, "/moc.cloudagent.zone.ZoneAgent/Precheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZoneAgentServer is the server API for ZoneAgent service.
type ZoneAgentServer interface {
	Invoke(context.Context, *ZoneRequest) (*ZoneResponse, error)
	// Prechecks whether the system is able to create specified zone (but does not actually create them).
	Precheck(context.Context, *ZonePrecheckRequest) (*ZonePrecheckResponse, error)
}

// UnimplementedZoneAgentServer can be embedded to have forward compatible implementations.
type UnimplementedZoneAgentServer struct {
}

func (*UnimplementedZoneAgentServer) Invoke(ctx context.Context, req *ZoneRequest) (*ZoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Invoke not implemented")
}
func (*UnimplementedZoneAgentServer) Precheck(ctx context.Context, req *ZonePrecheckRequest) (*ZonePrecheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Precheck not implemented")
}

func RegisterZoneAgentServer(s *grpc.Server, srv ZoneAgentServer) {
	s.RegisterService(&_ZoneAgent_serviceDesc, srv)
}

func _ZoneAgent_Invoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneAgentServer).Invoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moc.cloudagent.zone.ZoneAgent/Invoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneAgentServer).Invoke(ctx, req.(*ZoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneAgent_Precheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZonePrecheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneAgentServer).Precheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moc.cloudagent.zone.ZoneAgent/Precheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneAgentServer).Precheck(ctx, req.(*ZonePrecheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZoneAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "moc.cloudagent.zone.ZoneAgent",
	HandlerType: (*ZoneAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Invoke",
			Handler:    _ZoneAgent_Invoke_Handler,
		},
		{
			MethodName: "Precheck",
			Handler:    _ZoneAgent_Precheck_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "moc_cloudagent_zone.proto",
}
