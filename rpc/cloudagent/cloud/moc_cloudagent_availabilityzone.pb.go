// Code generated by protoc-gen-go. DO NOT EDIT.
// source: moc_cloudagent_availabilityzone.proto

package cloud

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	common "github.com/microsoft/moc/rpc/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AvailabilityZoneRequest struct {
	AvailabilityZones    []*AvailabilityZone `protobuf:"bytes,1,rep,name=AvailabilityZones,proto3" json:"AvailabilityZones,omitempty"`
	OperationType        common.Operation    `protobuf:"varint,2,opt,name=OperationType,proto3,enum=moc.Operation" json:"OperationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AvailabilityZoneRequest) Reset()         { *m = AvailabilityZoneRequest{} }
func (m *AvailabilityZoneRequest) String() string { return proto.CompactTextString(m) }
func (*AvailabilityZoneRequest) ProtoMessage()    {}
func (*AvailabilityZoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fcb2ab1cd58003c, []int{0}
}

func (m *AvailabilityZoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailabilityZoneRequest.Unmarshal(m, b)
}
func (m *AvailabilityZoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailabilityZoneRequest.Marshal(b, m, deterministic)
}
func (m *AvailabilityZoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailabilityZoneRequest.Merge(m, src)
}
func (m *AvailabilityZoneRequest) XXX_Size() int {
	return xxx_messageInfo_AvailabilityZoneRequest.Size(m)
}
func (m *AvailabilityZoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailabilityZoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AvailabilityZoneRequest proto.InternalMessageInfo

func (m *AvailabilityZoneRequest) GetAvailabilityZones() []*AvailabilityZone {
	if m != nil {
		return m.AvailabilityZones
	}
	return nil
}

func (m *AvailabilityZoneRequest) GetOperationType() common.Operation {
	if m != nil {
		return m.OperationType
	}
	return common.Operation_GET
}

type AvailabilityZoneResponse struct {
	AvailabilityZones    []*AvailabilityZone `protobuf:"bytes,1,rep,name=AvailabilityZones,proto3" json:"AvailabilityZones,omitempty"`
	Result               *wrappers.BoolValue `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
	Error                string              `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AvailabilityZoneResponse) Reset()         { *m = AvailabilityZoneResponse{} }
func (m *AvailabilityZoneResponse) String() string { return proto.CompactTextString(m) }
func (*AvailabilityZoneResponse) ProtoMessage()    {}
func (*AvailabilityZoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fcb2ab1cd58003c, []int{1}
}

func (m *AvailabilityZoneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailabilityZoneResponse.Unmarshal(m, b)
}
func (m *AvailabilityZoneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailabilityZoneResponse.Marshal(b, m, deterministic)
}
func (m *AvailabilityZoneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailabilityZoneResponse.Merge(m, src)
}
func (m *AvailabilityZoneResponse) XXX_Size() int {
	return xxx_messageInfo_AvailabilityZoneResponse.Size(m)
}
func (m *AvailabilityZoneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailabilityZoneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AvailabilityZoneResponse proto.InternalMessageInfo

func (m *AvailabilityZoneResponse) GetAvailabilityZones() []*AvailabilityZone {
	if m != nil {
		return m.AvailabilityZones
	}
	return nil
}

func (m *AvailabilityZoneResponse) GetResult() *wrappers.BoolValue {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *AvailabilityZoneResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type AvailabilityZonePrecheckRequest struct {
	AvailabilityZones    []*AvailabilityZone `protobuf:"bytes,1,rep,name=AvailabilityZones,proto3" json:"AvailabilityZones,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AvailabilityZonePrecheckRequest) Reset()         { *m = AvailabilityZonePrecheckRequest{} }
func (m *AvailabilityZonePrecheckRequest) String() string { return proto.CompactTextString(m) }
func (*AvailabilityZonePrecheckRequest) ProtoMessage()    {}
func (*AvailabilityZonePrecheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fcb2ab1cd58003c, []int{2}
}

func (m *AvailabilityZonePrecheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailabilityZonePrecheckRequest.Unmarshal(m, b)
}
func (m *AvailabilityZonePrecheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailabilityZonePrecheckRequest.Marshal(b, m, deterministic)
}
func (m *AvailabilityZonePrecheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailabilityZonePrecheckRequest.Merge(m, src)
}
func (m *AvailabilityZonePrecheckRequest) XXX_Size() int {
	return xxx_messageInfo_AvailabilityZonePrecheckRequest.Size(m)
}
func (m *AvailabilityZonePrecheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailabilityZonePrecheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AvailabilityZonePrecheckRequest proto.InternalMessageInfo

func (m *AvailabilityZonePrecheckRequest) GetAvailabilityZones() []*AvailabilityZone {
	if m != nil {
		return m.AvailabilityZones
	}
	return nil
}

type AvailabilityZonePrecheckResponse struct {
	// The precheck result: true if the precheck criteria is passed; otherwise, false
	Result *wrappers.BoolValue `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	// The error message if the precheck is not passed; otherwise, empty string
	Error                string   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailabilityZonePrecheckResponse) Reset()         { *m = AvailabilityZonePrecheckResponse{} }
func (m *AvailabilityZonePrecheckResponse) String() string { return proto.CompactTextString(m) }
func (*AvailabilityZonePrecheckResponse) ProtoMessage()    {}
func (*AvailabilityZonePrecheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fcb2ab1cd58003c, []int{3}
}

func (m *AvailabilityZonePrecheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailabilityZonePrecheckResponse.Unmarshal(m, b)
}
func (m *AvailabilityZonePrecheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailabilityZonePrecheckResponse.Marshal(b, m, deterministic)
}
func (m *AvailabilityZonePrecheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailabilityZonePrecheckResponse.Merge(m, src)
}
func (m *AvailabilityZonePrecheckResponse) XXX_Size() int {
	return xxx_messageInfo_AvailabilityZonePrecheckResponse.Size(m)
}
func (m *AvailabilityZonePrecheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailabilityZonePrecheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AvailabilityZonePrecheckResponse proto.InternalMessageInfo

func (m *AvailabilityZonePrecheckResponse) GetResult() *wrappers.BoolValue {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *AvailabilityZonePrecheckResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type AvailabilityZone struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string         `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	LocationName         string         `protobuf:"bytes,3,opt,name=locationName,proto3" json:"locationName,omitempty"`
	Nodes                []string       `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Status               *common.Status `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AvailabilityZone) Reset()         { *m = AvailabilityZone{} }
func (m *AvailabilityZone) String() string { return proto.CompactTextString(m) }
func (*AvailabilityZone) ProtoMessage()    {}
func (*AvailabilityZone) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fcb2ab1cd58003c, []int{4}
}

func (m *AvailabilityZone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailabilityZone.Unmarshal(m, b)
}
func (m *AvailabilityZone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailabilityZone.Marshal(b, m, deterministic)
}
func (m *AvailabilityZone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailabilityZone.Merge(m, src)
}
func (m *AvailabilityZone) XXX_Size() int {
	return xxx_messageInfo_AvailabilityZone.Size(m)
}
func (m *AvailabilityZone) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailabilityZone.DiscardUnknown(m)
}

var xxx_messageInfo_AvailabilityZone proto.InternalMessageInfo

func (m *AvailabilityZone) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AvailabilityZone) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AvailabilityZone) GetLocationName() string {
	if m != nil {
		return m.LocationName
	}
	return ""
}

func (m *AvailabilityZone) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *AvailabilityZone) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*AvailabilityZoneRequest)(nil), "moc.cloudagent.availabilityzone.AvailabilityZoneRequest")
	proto.RegisterType((*AvailabilityZoneResponse)(nil), "moc.cloudagent.availabilityzone.AvailabilityZoneResponse")
	proto.RegisterType((*AvailabilityZonePrecheckRequest)(nil), "moc.cloudagent.availabilityzone.AvailabilityZonePrecheckRequest")
	proto.RegisterType((*AvailabilityZonePrecheckResponse)(nil), "moc.cloudagent.availabilityzone.AvailabilityZonePrecheckResponse")
	proto.RegisterType((*AvailabilityZone)(nil), "moc.cloudagent.availabilityzone.AvailabilityZone")
}

func init() {
	proto.RegisterFile("moc_cloudagent_availabilityzone.proto", fileDescriptor_1fcb2ab1cd58003c)
}

var fileDescriptor_1fcb2ab1cd58003c = []byte{
	// 457 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x52, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x66, 0x1d, 0x6a, 0xd1, 0x0d, 0x44, 0xb0, 0x02, 0xd5, 0xf2, 0x81, 0x5a, 0x46, 0x48, 0xb9,
	0xb0, 0x16, 0x86, 0x03, 0xdc, 0x48, 0x25, 0x0e, 0x5c, 0x00, 0x19, 0xc4, 0xa1, 0x97, 0x68, 0xb3,
	0x99, 0xa6, 0x56, 0xd7, 0x3b, 0x66, 0x77, 0x5d, 0x54, 0x2e, 0x48, 0xbc, 0x01, 0x07, 0xde, 0x82,
	0x03, 0x2f, 0xc1, 0x7b, 0xa1, 0xac, 0x1d, 0xd2, 0x3a, 0x42, 0x28, 0x20, 0x7a, 0xda, 0x9f, 0xf9,
	0xe6, 0x9b, 0x6f, 0xbe, 0x19, 0x7a, 0xbf, 0x42, 0x39, 0x95, 0x0a, 0x9b, 0xb9, 0x58, 0x80, 0x76,
	0x53, 0x71, 0x2a, 0x4a, 0x25, 0x66, 0xa5, 0x2a, 0xdd, 0xd9, 0x47, 0xd4, 0xc0, 0x6b, 0x83, 0x0e,
	0xd9, 0x7e, 0x85, 0x92, 0xaf, 0x61, 0xbc, 0x0f, 0x8b, 0xef, 0x2e, 0x10, 0x17, 0x0a, 0x32, 0x0f,
	0x9f, 0x35, 0x47, 0xd9, 0x07, 0x23, 0xea, 0x1a, 0x8c, 0x6d, 0x09, 0xe2, 0x3d, 0x5f, 0x07, 0xab,
	0x0a, 0x75, 0x77, 0xb4, 0x81, 0xf4, 0x3b, 0xa1, 0x7b, 0x93, 0x73, 0x6c, 0x87, 0xa8, 0xa1, 0x80,
	0xf7, 0x0d, 0x58, 0xc7, 0xa6, 0xf4, 0x56, 0x3f, 0x64, 0x23, 0x92, 0x0c, 0xc6, 0xc3, 0xfc, 0x21,
	0xff, 0x83, 0x22, 0xbe, 0x41, 0xba, 0xc9, 0xc5, 0x1e, 0xd3, 0x1b, 0xaf, 0x6a, 0x30, 0xc2, 0x95,
	0xa8, 0xdf, 0x9e, 0xd5, 0x10, 0x05, 0x09, 0x19, 0x8f, 0xf2, 0x91, 0x27, 0xff, 0x15, 0x29, 0x2e,
	0x82, 0xd2, 0x1f, 0x84, 0x46, 0x9b, 0x92, 0x6d, 0x8d, 0xda, 0xc2, 0xff, 0xd7, 0x9c, 0xd3, 0xb0,
	0x00, 0xdb, 0x28, 0xe7, 0xc5, 0x0e, 0xf3, 0x98, 0xb7, 0xd6, 0xf3, 0x95, 0xf5, 0xfc, 0x00, 0x51,
	0xbd, 0x13, 0xaa, 0x81, 0xa2, 0x43, 0xb2, 0xdb, 0x74, 0xe7, 0xb9, 0x31, 0x68, 0xa2, 0x41, 0x42,
	0xc6, 0xbb, 0x45, 0xfb, 0x48, 0x3f, 0x13, 0xba, 0xdf, 0xe7, 0x7f, 0x6d, 0x40, 0x1e, 0x83, 0x3c,
	0xb9, 0xac, 0x11, 0xa4, 0x8a, 0x26, 0xbf, 0xd7, 0xd0, 0x79, 0xba, 0x6e, 0x99, 0x6c, 0xdf, 0x72,
	0x70, 0xbe, 0xe5, 0xaf, 0x84, 0xde, 0xec, 0x97, 0x63, 0x8c, 0x5e, 0xd5, 0xa2, 0x02, 0x4f, 0xbe,
	0x5b, 0xf8, 0x3b, 0x1b, 0xd1, 0xa0, 0x9c, 0x77, 0xb9, 0x41, 0x39, 0x67, 0x29, 0xbd, 0xae, 0x50,
	0xfa, 0x1d, 0x78, 0xb9, 0xc4, 0xb6, 0x46, 0x5e, 0xf8, 0x5b, 0x96, 0xd4, 0x38, 0x07, 0x1b, 0xed,
	0x24, 0x83, 0x65, 0x49, 0xff, 0x60, 0xf7, 0x68, 0x68, 0x9d, 0x70, 0x8d, 0x8d, 0x42, 0x2f, 0x7e,
	0xe8, 0x6d, 0x7b, 0xe3, 0xbf, 0x8a, 0x2e, 0x94, 0x7f, 0x0b, 0xe8, 0x9d, 0xbe, 0xae, 0xc9, 0xd2,
	0x54, 0xf6, 0x89, 0x86, 0x2f, 0xf4, 0x29, 0x9e, 0x00, 0x7b, 0xb2, 0xbd, 0xdf, 0xed, 0x10, 0xe3,
	0xa7, 0x7f, 0x91, 0xd9, 0x5a, 0x9f, 0x5e, 0x61, 0x5f, 0x08, 0xbd, 0xb6, 0x9a, 0x08, 0x7b, 0xb6,
	0x35, 0x53, 0x6f, 0xa1, 0xe2, 0xc9, 0x3f, 0x30, 0xac, 0x34, 0x1d, 0x64, 0x87, 0x0f, 0x16, 0xa5,
	0x3b, 0x6e, 0x66, 0x5c, 0x62, 0x95, 0x55, 0xa5, 0x34, 0x68, 0xf1, 0xc8, 0x65, 0x15, 0xca, 0xcc,
	0xd4, 0x32, 0x5b, 0xd3, 0xb7, 0xd7, 0x59, 0xe8, 0x37, 0xe5, 0xd1, 0xcf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xf4, 0x3d, 0x07, 0x07, 0xef, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AvailabilityZoneAgentClient is the client API for AvailabilityZoneAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AvailabilityZoneAgentClient interface {
	Invoke(ctx context.Context, in *AvailabilityZoneRequest, opts ...grpc.CallOption) (*AvailabilityZoneResponse, error)
	// Prechecks whether the system is able to create specified availability zone (but does not actually create them).
	Precheck(ctx context.Context, in *AvailabilityZonePrecheckRequest, opts ...grpc.CallOption) (*AvailabilityZonePrecheckResponse, error)
}

type availabilityZoneAgentClient struct {
	cc *grpc.ClientConn
}

func NewAvailabilityZoneAgentClient(cc *grpc.ClientConn) AvailabilityZoneAgentClient {
	return &availabilityZoneAgentClient{cc}
}

func (c *availabilityZoneAgentClient) Invoke(ctx context.Context, in *AvailabilityZoneRequest, opts ...grpc.CallOption) (*AvailabilityZoneResponse, error) {
	out := new(AvailabilityZoneResponse)
	err := c.cc.Invoke(ctx, "/moc.cloudagent.availabilityzone.AvailabilityZoneAgent/Invoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *availabilityZoneAgentClient) Precheck(ctx context.Context, in *AvailabilityZonePrecheckRequest, opts ...grpc.CallOption) (*AvailabilityZonePrecheckResponse, error) {
	out := new(AvailabilityZonePrecheckResponse)
	err := c.cc.Invoke(ctx, "/moc.cloudagent.availabilityzone.AvailabilityZoneAgent/Precheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AvailabilityZoneAgentServer is the server API for AvailabilityZoneAgent service.
type AvailabilityZoneAgentServer interface {
	Invoke(context.Context, *AvailabilityZoneRequest) (*AvailabilityZoneResponse, error)
	// Prechecks whether the system is able to create specified availability zone (but does not actually create them).
	Precheck(context.Context, *AvailabilityZonePrecheckRequest) (*AvailabilityZonePrecheckResponse, error)
}

// UnimplementedAvailabilityZoneAgentServer can be embedded to have forward compatible implementations.
type UnimplementedAvailabilityZoneAgentServer struct {
}

func (*UnimplementedAvailabilityZoneAgentServer) Invoke(ctx context.Context, req *AvailabilityZoneRequest) (*AvailabilityZoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Invoke not implemented")
}
func (*UnimplementedAvailabilityZoneAgentServer) Precheck(ctx context.Context, req *AvailabilityZonePrecheckRequest) (*AvailabilityZonePrecheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Precheck not implemented")
}

func RegisterAvailabilityZoneAgentServer(s *grpc.Server, srv AvailabilityZoneAgentServer) {
	s.RegisterService(&_AvailabilityZoneAgent_serviceDesc, srv)
}

func _AvailabilityZoneAgent_Invoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AvailabilityZoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AvailabilityZoneAgentServer).Invoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moc.cloudagent.availabilityzone.AvailabilityZoneAgent/Invoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AvailabilityZoneAgentServer).Invoke(ctx, req.(*AvailabilityZoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AvailabilityZoneAgent_Precheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AvailabilityZonePrecheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AvailabilityZoneAgentServer).Precheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moc.cloudagent.availabilityzone.AvailabilityZoneAgent/Precheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AvailabilityZoneAgentServer).Precheck(ctx, req.(*AvailabilityZonePrecheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AvailabilityZoneAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "moc.cloudagent.availabilityzone.AvailabilityZoneAgent",
	HandlerType: (*AvailabilityZoneAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Invoke",
			Handler:    _AvailabilityZoneAgent_Invoke_Handler,
		},
		{
			MethodName: "Precheck",
			Handler:    _AvailabilityZoneAgent_Precheck_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "moc_cloudagent_availabilityzone.proto",
}
